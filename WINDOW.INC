
; WINDOW BORDERS
WIN_UL				EQU		$18
WIN_BL				EQU		$1A
WIN_UR				EQU		$19
WIN_BR				EQU		$1B
WIN_H				EQU		$17
WIN_V				EQU		$16
WIN_LHS				EQU		$14
WIN_RHS				EQU		$13
WIN_UVS				EQU		$12
WIN_BVS				EQU		$11

GKEY_RIGHT			EQU		$1C
GKEY_LEFT			EQU		$1D
GKEY_UP				EQU		$1E
GKEY_DOWN			EQU		$1F

ENTER_EVENT			EQU		$01
EXIT_EVENT			EQU		$02
KEYPRESS_EVENT		EQU		$03
BUTTONPRESS_EVENT	EQU		$04
COMMAND_EVENT		EQU		$05
LCLICKPRESS_EVENT	EQU		$06
RCLICKPRESS_EVENT	EQU		$07
UPDATE_EVENT		EQU		$08
LDCLICKPRESS_EVENT	EQU		$09
RDCLICKPRESS_EVENT	EQU		$10
HOTKEY_EVENT		EQU		$11

VISIBLE_BIT			EQU		7
FOCUS_BIT			EQU		6
DIRTY_BIT			EQU		5
CONTROL_BIT			EQU		4
ITEM_BIT			EQU		3 ; ITEM LIST, NOT VISIBLE BUT STILL SELECTABLE
CLICKABLE_BIT		EQU		2

VISIBLE_FLAG		EQU		(1<<VISIBLE_BIT)
FOCUS_FLAG			EQU		(1<<FOCUS_BIT)
DIRTY_FLAG			EQU		(1<<DIRTY_BIT)
CONTROL_FLAG		EQU		(1<<CONTROL_BIT)
ITEM_FLAG			EQU		(1<<ITEM_BIT)
CLICKABLE_FLAG		EQU		(1<<CLICKABLE_BIT)

INIT_FLAGS			EQU		(VISIBLE_FLAG | DIRTY_FLAG)
CONTROL_FLAGS		EQU		(INIT_FLAGS | CONTROL_FLAG)
MENU_ITEM_FLAGS 	EQU		(DIRTY_FLAG | CONTROL_FLAG | ITEM_FLAG)
MENU_SEP_FLAGS		EQU		(DIRTY_FLAG)
DLG_FLAGS			EQU		(DIRTY_FLAG)
DDOWN_FLAGS			EQU		(DIRTY_FLAG)

OBJECT_TYPE			EQU		$00
AREA_TYPE			EQU		$01
WINDOW_TYPE			EQU		$02
MENU_BAR_TYPE		EQU		$03
MENU_TYPE			EQU		$04
DDOWN_MENU_TYPE 	EQU		$05
MENU_ITEM_TYPE		EQU		$06
LABEL_TYPE			EQU		$07
BUTTON_TYPE			EQU		$08	
CONSOLE_TYPE		EQU		$09
FKEY_TYPE			EQU		$0A
DIALOG_TYPE			EQU		$0B
MENU_SEP_TYPE		EQU		$0C
VIEW_TYPE			EQU		$0D
VIEW_ITEM_TYPE		EQU		$0E
TEXT_BOX_TYPE		EQU		$0F
PROGRESS_BAR_TYPE	EQU		$10
CHECK_BOX_TYPE		EQU		$11

PY					EQU		$00
PX					EQU		$01
POINT_SIZE			EQU		$02

OBJ_TYPE			EQU		$00

AREA_P0				EQU		(OBJ_TYPE+1)
AREA_P1				EQU		(AREA_P0+POINT_SIZE)
AREA_SIZE			EQU		(AREA_P1+POINT_SIZE)

WIN_ATTR			EQU		(AREA_SIZE)
WIN_PARENT			EQU		(WIN_ATTR+1)
WIN_NEXT			EQU		(WIN_PARENT+3)
WIN_PREV			EQU		(WIN_NEXT+3)
WIN_CHILD			EQU		(WIN_PREV+3)
WIN_FLAGS			EQU		(WIN_CHILD+3)
WIN_DRAW_F			EQU		(WIN_FLAGS+1)
WIN_UPDATE_F		EQU		(WIN_DRAW_F+2)
WIN_LABEL			EQU		(WIN_UPDATE_F+2)
WIN_LASTFOCUS		EQU		(WIN_LABEL+2)
WIN_SIZE			EQU		(WIN_LASTFOCUS+3)

MENU_SIZE			EQU		(WIN_SIZE)
MENU_ITEM_SIZE		EQU		(WIN_SIZE)
DDOWN_MENU_SIZE 	EQU	(WIN_SIZE)

BUTTON_ID			EQU		(WIN_SIZE)
BUTTON_SIZE			EQU		(BUTTON_ID+1)

CHECK_BOX_VALUE		EQU		(WIN_SIZE)
CHECK_BOX_SIZE		EQU		(CHECK_BOX_VALUE+1)

FKEY_LABEL			EQU		(WIN_SIZE)
FKEY_SIZE			EQU		(FKEY_LABEL+2)

CONSOLE_PATH		EQU		(WIN_SIZE)
CONSOLE_SIZE		EQU		(CONSOLE_PATH+67)

TEXT_BOX_TEXT_SIZE	EQU		124

TEXT_BOX_CUR_POS	EQU		(WIN_SIZE)
TEXT_BOX_SCROLL		EQU		(TEXT_BOX_CUR_POS+1)
TEXT_BOX_TEXT		EQU		(TEXT_BOX_SCROLL+1)
TEXT_BOX_SIZE		EQU		(TEXT_BOX_TEXT+TEXT_BOX_TEXT_SIZE+1)

VIEW_RESCAN			EQU		(WIN_SIZE)
VIEW_CUR_DRIVE		EQU		(VIEW_RESCAN+1)
VIEW_NUM_FILES		EQU		(VIEW_CUR_DRIVE+1)
VIEW_FILESIZE		EQU		(VIEW_NUM_FILES+2)
VIEW_SCROLL			EQU		(VIEW_FILESIZE+4)
VIEW_SELECTED		EQU		(VIEW_SCROLL+2)
VIEW_VOLUME			EQU		(VIEW_SELECTED+2)
VIEW_CUR_PATH		EQU		(VIEW_VOLUME+13)
VIEW_PREV_DIR		EQU		(VIEW_CUR_PATH+67)
VIEW_SEL_FILE		EQU		(VIEW_PREV_DIR+13)
VIEW_FILTER			EQU		(VIEW_SEL_FILE+14)
VIEW_SIZE			EQU		(VIEW_FILTER+13)

VIEW_ITEM_FILENAME	EQU		(WIN_SIZE)
VIEW_ITEM_ATTR		EQU		(VIEW_ITEM_FILENAME+13)
VIEW_ITEM_TIME		EQU		(VIEW_ITEM_ATTR+1)
VIEW_ITEM_DATE		EQU		(VIEW_ITEM_TIME+2)
VIEW_ITEM_FILESIZE	EQU		(VIEW_ITEM_DATE+2)
VIEW_ITEM_SELECTED	EQU		(VIEW_ITEM_FILESIZE+4)
VIEW_ITEM_SIZE		EQU		(VIEW_ITEM_SELECTED+1)

PROGRESS_BAR_MAX	EQU		(WIN_SIZE)
PROGRESS_BAR_CUR	EQU		(PROGRESS_BAR_MAX+2)
PROGRESS_BAR_SIZE	EQU		(PROGRESS_BAR_CUR+2)

USER_ENTRY_NEXT		EQU		$00
USER_ENTRY_KEY		EQU		(USER_ENTRY_NEXT+3)
USER_ENTRY_LABEL	EQU		(USER_ENTRY_KEY+1)
USER_ENTRY_COMMAND	EQU		(USER_ENTRY_LABEL+32)
USER_ENTRY_SIZE		EQU		(USER_ENTRY_COMMAND+128)

BLACK_COLOR			EQU		$00
BLUE_COLOR			EQU		$01
CYAN_COLOR			EQU		$80
WHITE_COLOR			EQU		$81

NONE_BUTTON			EQU		$FF
OK_BUTTON			EQU		$FE
CANCEL_BUTTON		EQU		$FD
RETRY_BUTTON		EQU		$FC
ABORT_BUTTON		EQU		$FB
ALL_BUTTON			EQU		$FA

%MACRO LOWER (%N)
#1 & $FF
%ENDMACRO

%MACRO UPPER (%N)
#1 >> 8
%ENDMACRO

;; OBJECT
%MACRO	OBJ_SETTYPE	%N
	LD		(IX+OBJ_TYPE),#1
%ENDMACRO

;; WINDOW
%MACRO	WIN_SETDIM	%N,%N,%N,%N
	LD		(IX+AREA_P0+PY),#1
	LD		(IX+AREA_P0+PX),#2
	LD		(IX+AREA_P1+PY),#3
	LD		(IX+AREA_P1+PX),#4
%ENDMACRO

%MACRO	WIN_SETATTR	%N
	LD		(IX+WIN_ATTR),#1
%ENDMACRO

%MACRO	WIN_SETFLAGS %N
	LD		(IX+WIN_FLAGS),#1
%ENDMACRO

%MACRO WIN_SETPARENT %N
	LD		(IX+WIN_PARENT),LOWER(#1)
	LD		(IX+WIN_PARENT+1),UPPER(#1)
	LD		(IX+WIN_PARENT+2),A
%ENDMACRO

%MACRO WIN_SETNEXT %N
	LD		(IX+WIN_NEXT),LOWER(#1)
	LD		(IX+WIN_NEXT+1),UPPER(#1)
	LD		(IX+WIN_NEXT+2),A
%ENDMACRO

%MACRO WIN_SETPREV %N
	LD		(IX+WIN_PREV),LOWER(#1)
	LD		(IX+WIN_PREV+1),UPPER(#1)
	LD		(IX+WIN_PREV+2),A
%ENDMACRO

%MACRO WIN_SETCHILD %N
	LD		(IX+WIN_CHILD),LOWER(#1)
	LD		(IX+WIN_CHILD+1),UPPER(#1)
	LD		(IX+WIN_CHILD+2),A
%ENDMACRO

%MACRO WIN_SETDRAW_F %N
	LD		(IX+WIN_DRAW_F),LOWER(#1)
	LD		(IX+WIN_DRAW_F+1),UPPER(#1)
%ENDMACRO

%MACRO WIN_SETUPDATE_F %N
	LD		(IX+WIN_UPDATE_F),LOWER(#1)
	LD		(IX+WIN_UPDATE_F+1),UPPER(#1)
%ENDMACRO

%MACRO WIN_SETLABEL %N
	LD		(IX+WIN_LABEL),LOWER(#1)
	LD		(IX+WIN_LABEL+1),UPPER(#1)
%ENDMACRO

%MACRO	WINDOW	%N
	LD				IX,#1
	OBJ_SETTYPE		WINDOW_TYPE
%ENDMACRO

%MACRO	VIEW	%N
	LD				IX,#1
	OBJ_SETTYPE		VIEW_TYPE
	LD				(IX+VIEW_RESCAN),1
%ENDMACRO

%MACRO MENU_BAR %N
	LD		IX,#1
	LD		(IX+OBJ_TYPE),MENU_BAR_TYPE
%ENDMACRO

%MACRO	MENU %N
	LD		IX,#1
	LD		(IX+OBJ_TYPE),MENU_TYPE
%ENDMACRO

%MACRO	DDOWN_MENU %N
	LD		IX,#1
	LD		(IX+OBJ_TYPE),DDOWN_MENU_TYPE
%ENDMACRO

%MACRO	MENU_ITEM %N
	LD		IX,#1
	LD		(IX+OBJ_TYPE),MENU_ITEM_TYPE
%ENDMACRO

%MACRO	MENU_SEP %N
	LD		IX,#1
	LD		(IX+OBJ_TYPE),MENU_SEP_TYPE
%ENDMACRO

%MACRO	LABEL	%N
	LD		IX,#1
	LD		(IX+OBJ_TYPE),LABEL_TYPE
%ENDMACRO

%MACRO	BUTTON	%N
	LD		IX,#1
	LD		(IX+OBJ_TYPE),BUTTON_TYPE
%ENDMACRO

%MACRO	CONSOLE	%N
	LD		IX,#1
	LD		(IX+OBJ_TYPE),CONSOLE_TYPE
%ENDMACRO

%MACRO	FKEY %N
	LD		IX,#1
	LD		(IX+OBJ_TYPE),FKEY_TYPE
%ENDMACRO

%MACRO	DIALOG	%N
	LD		IX,#1
	LD		(IX+OBJ_TYPE),DIALOG_TYPE
%ENDMACRO

%MACRO	TEXT_BOX %N
	LD		IX,#1
	LD		(IX+OBJ_TYPE),TEXT_BOX_TYPE
%ENDMACRO

%MACRO	PROGRESS_BAR	%N
	LD		IX,#1
	LD		(IX+OBJ_TYPE),PROGRESS_BAR_TYPE
%ENDMACRO

;;;;

%MACRO BUTTON_SETID %N
	LD		(IX+BUTTON_ID),#1
%ENDMACRO

%MACRO FKEY_SETLABEL %N
	LD		(IX+FKEY_LABEL),LOWER(#1)
	LD		(IX+FKEY_LABEL+1),UPPER(#1)
%ENDMACRO

%MACRO WALK HL,%N,%N
	%IF #1!=#2	
		%IF #1 < #2
			%IF #1 < #2-6
				PUSH	BC
				LD		BC,#2-#1
				ADD		HL,BC
				POP		BC
			%ELSE
				INC	HL
				WALK HL,#1+1,#2
			%ENDIF
		%ELSE
			%IF #1 > #2+6
				PUSH	BC
				LD		BC,#2-#1
				ADD		HL,BC
				POP		BC
			%ELSE
				DEC	HL
				WALK HL,#1-1,#2
			%ENDIF
		%ENDIF
	%ENDIF
%ENDMACRO

OPEN_YES_NO_DLG:	
; HL ERROR MSG
; DE ERROR MSG2
	LD		IX,CONFIRM_MSG
	LD		(IX+WIN_LABEL),L
	LD		(IX+WIN_LABEL+1),H
	CALL	STRLEN
	SRA		B
	LD		A,35
	SUB		B
	LD		(IX+AREA_P0+PX),A
	
	LD		IX,CONFIRM_MSG2
	LD		(IX+WIN_LABEL),E
	LD		(IX+WIN_LABEL+1),D
	EX		DE,HL
	CALL	STRLEN
	SRA		B
	LD		A,35
	SUB		B
	LD		(IX+AREA_P0+PX),A

	LD		IX,CONFIRM_DLG_OK_BUTTON
	LD		A,(IX+WIN_FLAGS)
	SET		VISIBLE_BIT,A
	LD		(IX+WIN_FLAGS),A
	LD		IX,CONFIRM_DLG_NO_BUTTON
	LD		A,(IX+WIN_FLAGS)
	SET		VISIBLE_BIT,A
	LD		(IX+WIN_FLAGS),A
	LD		IX,CONFIRM_DIALOG
	LD		HL,STR_ERROR_LABEL
	LD		(IX+WIN_LABEL),L
	LD		(IX+WIN_LABEL+1),H
	WIN_SETUPDATE_F	WINDOW_UPDATE_DLG_ERROR

	LD		A,0
	LD		(FAST_DRAW),A
	CALL	WINDOW_OPEN
.LOOP:
	CALL	WM_UPDATE
	CALL	FLUSH_SCREEN
	LD		A,(PAGE2)
	CALL	PUT_P2
	LD		IX,CONFIRM_DIALOG
	LD		A,(IX+WIN_FLAGS)
	BIT		VISIBLE_BIT,A
	JR		NZ,.LOOP

	RET
	
WM_UPDATE:
	
	XOR		A
	LD		(FAST_DRAW),A
	
	LD		IX,CHSNS
	CALL	CALLBIOS
	JP		Z,.MOUSE
.KEYPRESS:	
	LD		IX,CHGET
	CALL	CALLBIOS
	LD		E,A
	
	LD		HL,(FOCUS_WINDOW)
	LD		A,L
	OR		H
	JP		Z,.EXIT

	PUSH	HL
	POP		IX
	
	LD		HL,(FOCUS_CONTROL)
	LD		A,H
	OR		L
	JP		Z,.NO_CONTROL
	LD		A,(FOCUS_CONTROL+2)
	CALL	PUT_P2
	
	PUSH	IX
	PUSH	HL
	POP		IX
	LD		A,KEYPRESS_EVENT
	LD		D,1
	CALL	WINDOW_UPDATE_FUNCTION
	POP		IX
	JP		C,.EXIT
.NO_CONTROL:
	LD		A,(FOCUS_WINDOW+2)
	CALL	PUT_P2	
	LD		A,KEYPRESS_EVENT
	CALL	WINDOW_UPDATE_FUNCTION
	JP		C,.EXIT
.MOUSE:
	; INPUT DEVICES
	LD		A,12
	CALL	READ_MOUSE
	LD		A,16
	CALL	READ_MOUSE
	
	CALL	READ_MOUSE_BUTTONS
	LD		A,(MOUSE_LDOUBLECLICK)
	LD		(MOUSE_LDBUTTON),A
	XOR		A
	LD		(MOUSE_LDOUBLECLICK),A
	
	LD		A,(MOUSE_LBUTTON)
	OR		A
	JR		Z,.NOT_LCLICK
.MOUSE_CLICK:
	LD		A,(FOCUS_WINDOW+2)
	OR		A
	JR		Z,.ROOT
	CALL	PUT_P2
	LD		IX,(FOCUS_WINDOW)
	LD		A,(IX+OBJ_TYPE)
	CP		DDOWN_MENU_TYPE
	JR		NZ,.SKIP_SIB
	LD		A,1
	JR		.SCAN
.SKIP_SIB:
	XOR		A
.SCAN:
	LD		(SCAN_SIBLINGS),A
	CALL	WM_MOUSE_CLICK
	JR		C,.NOT_LCLICK
	
	LD		A,(FOCUS_WINDOW+2)
	CALL	PUT_P2
	LD		IX,(FOCUS_WINDOW)
	LD		A,(IX+OBJ_TYPE)
	CP		MENU_TYPE
	JR		Z,.CLOSE_IT
	CP		DIALOG_TYPE
	JR		Z,.EXIT
	JR		NZ,.ROOT
.CLOSE_IT:
	; MENU TYPE AND THE CLICK MISSED IT
	CALL	WINDOW_LOSE_FOCUS
.ROOT:
	LD		A,(PAGE2)
	CALL	PUT_P2
	LD		IX,WINDOW_LIST
	LD		A,1
	LD		(SCAN_SIBLINGS),A
	CALL	WM_MOUSE_CLICK
	JR		C,.EXIT
.NOT_LCLICK:
		
.EXIT:

	RET
	
WM_UPDATE_OBJECTS:
	
	CALL	READ_FKEYS
	
	CALL	WM_UPDATE_VIEWS
	
	RET

WINDOW_UPDATE_FUNCTION:
	EX		AF,AF'
	LD		L,(IX+WIN_UPDATE_F)
	LD		H,(IX+WIN_UPDATE_F+1)
	LD		A,H
	OR		L
	RET		Z
	EX		AF,AF'
	CALL	UPDATE_F
	RET
UPDATE_F:
	JP		(HL)

WM_UPDATE_VIEWS:
	
	LD		A,(PAGE2)
	CALL	PUT_P2

	LD		HL,(FOCUS_WINDOW)
	LD		A,H
	OR		L
	JR		NZ,.FOCUSED
	LD		HL,(CUR_VIEW)
	LD		A,H
	OR		L
	JR		NZ,.SETFOCUS
	LD		HL,LEFT_VIEW
	LD		(CUR_VIEW),HL
	LD		HL,RIGHT_VIEW
	LD		(OPP_VIEW),HL
	LD		A,(PAGE2)
	LD		(CUR_VIEW+2),A
.SETFOCUS:
	LD		IX,(CUR_VIEW)
	CALL	WINDOW_SET_FOCUS
	
.FOCUSED:
	LD		IX,(CUR_VIEW)
	LD		A,(IX+WIN_FLAGS)
	BIT		VISIBLE_BIT,A
	JR		Z,.RIGHT_VIEW
	LD		A,UPDATE_EVENT
	CALL	WINDOW_UPDATE_FUNCTION
	
.RIGHT_VIEW:
	LD		A,(PAGE2)
	CALL	PUT_P2
	LD		IX,(OPP_VIEW)
	LD		A,(IX+WIN_FLAGS)
	BIT		VISIBLE_BIT,A
	JR		Z,.CONSOLE_VIEW
	LD		A,UPDATE_EVENT
	CALL	WINDOW_UPDATE_FUNCTION

.CONSOLE_VIEW:
	LD		A,(PAGE2)
	CALL	PUT_P2
	LD		IX,CONSOLE_VIEW
	LD		A,(IX+WIN_FLAGS)
	BIT		VISIBLE_BIT,A
	JR		Z,.EXIT
	LD		A,UPDATE_EVENT
	CALL	WINDOW_UPDATE_FUNCTION
	
.EXIT:
	RET

	
WM_DRAW:	
	DI

	LD		A,(FAST_DRAW)
	OR		A
	JR		NZ,.FAST_DRAW
	LD		HL,$0000
	LD		A,(PAGE2)
	CALL	PUT_P2
	LD		IX,WINDOW_LIST
	CALL	WM_DRAW_WINDOW
	RET
.FAST_DRAW:
	LD		HL,$0000
	LD		A,(FOCUS_WINDOW+2)
	OR		A
	JR		Z,.CUR_VIEW
	CALL	PUT_P2
	LD		IX,(FOCUS_WINDOW)
	CALL	WM_DRAW_WINDOW
	RET
	
.CUR_VIEW:
	LD		A,(CUR_VIEW+2)
	CALL	PUT_P2
	LD		IX,(CUR_VIEW)
	CALL	WM_DRAW_WINDOW
	RET
	
WM_MOUSE_CLICK:
; IX: WINDOW
	LD		A,(IX+WIN_FLAGS)
	BIT		VISIBLE_BIT,A
	JP		Z,.NEXT_WINDOW
	BIT		CONTROL_BIT,A
	JP		NZ,.ENTER
	BIT		CLICKABLE_BIT,A
	JP		NZ,.ENTER
	LD		A,(IX+OBJ_TYPE)
	CP		MENU_TYPE
	JR		Z,.ENTER
	CP		MENU_SEP_TYPE
	JR		Z,.ENTER
	CP		VIEW_TYPE
	JR		Z,.ENTER
	CP		TEXT_BOX_TYPE
	JR		Z,.ENTER
	JP		.CHILD_WINDOW
.ENTER:
	LD		HL,(MOUSE_POS_Y)
	SRL		L
	SRL		L
	LD		B,L
	LD		DE,(MOUSE_POS_X)
	SRL		E
	LD		C,E
	
	LD		H,(IX+AREA_P0+PX)
	LD		L,(IX+AREA_P0+PY)
	LD		D,(IX+AREA_P1+PX)
	LD		E,(IX+AREA_P1+PY)
	CALL	WINDOW_PARENT_ORIGIN
	
	LD		A,B ; Y
	SUB		L
	JP		M,.CHILD_WINDOW
	EXX
	LD		E,A
	EXX
	LD		A,E
	SUB		B
	JP		M,.CHILD_WINDOW
	
	LD		A,C ; X
	SUB		H
	JP		M,.CHILD_WINDOW
	EXX
	LD		D,A
	EXX
	LD		A,D
	SUB		C
	JP		M,.CHILD_WINDOW
.HIT:
	LD		A,(IX+OBJ_TYPE)
	CP		MENU_SEP_TYPE
	JR		Z,.EARLY_EXIT
	LD		L,(IX+WIN_UPDATE_F)
	LD		H,(IX+WIN_UPDATE_F+1)
	CALL	GET_P2
	PUSH	AF
	PUSH	HL
	PUSH	IX
	LD		A,LCLICKPRESS_EVENT
	EXX
	PUSH	DE
	EXX
	POP		DE
	CALL	.UPDATE_F
	POP		IX
	POP		HL
	POP		AF
	CALL	PUT_P2

	LD		A,(MOUSE_LDBUTTON)
	OR		A
	JR		Z,.EARLY_EXIT

	PUSH	IX
	LD		A,LDCLICKPRESS_EVENT
	EXX
	PUSH	DE
	EXX
	POP		DE
	CALL	.UPDATE_F
	POP		IX	
	
.EARLY_EXIT:
	SCF
	RET
	;JR		.CHILD_WINDOW
.UPDATE_F:
	JP		(HL)
	
.CHILD_WINDOW:
	LD		A,(IX+OBJ_TYPE)
	CP		VIEW_TYPE
	JR		Z,.NEXT_WINDOW

	LD		L,(IX+WIN_CHILD)
	LD		H,(IX+WIN_CHILD+1)
	LD		A,L
	OR		H
	JR		Z,.NEXT_WINDOW

	EXX	
	
	LD		HL,(PARENT_ORIGIN)
	PUSH	HL
	LD		E,(IX+AREA_P0+PY)
	LD		D,(IX+AREA_P0+PX)	
	LD		A,H
	ADD		A,D
	LD		H,A ; REL X
	LD		A,L
	ADD		A,E
	LD		L,A ; REL Y
	LD		(PARENT_ORIGIN),HL
	EXX

	CALL	GET_P2
	PUSH	AF ; SAVE P2
	LD		A,(IX+WIN_CHILD+2)
	CALL	PUT_P2 ; CHANGE TO CHILD P2
	
	PUSH	IX
	PUSH	HL
	POP		IX
	
	LD		A,(SCAN_SIBLINGS)
	PUSH	AF
	LD		A,1
	LD		(SCAN_SIBLINGS),A
	
	CALL	WM_MOUSE_CLICK
	EX		AF,AF'
	
	POP		AF
	LD		(SCAN_SIBLINGS),A

	POP		IX ; RESTORE THIS
	POP		AF ; RESTORE P2
	CALL	PUT_P2
	POP		HL ; RESTORE PARENT ORIGIN
	LD		(PARENT_ORIGIN),HL
	EX		AF,AF'	
	RET		C ; RETURN IF CLICK ATTENDED
	
.NEXT_WINDOW:
	LD		L,(IX+WIN_NEXT)
	LD		H,(IX+WIN_NEXT+1)
	LD		A,H
	OR		L
	RET		Z
	
	LD		A,(SCAN_SIBLINGS)
	OR		A
	RET		Z
	
	LD		A,(IX+WIN_NEXT+2)
	CALL	PUT_P2 ; CHANGE TO NEXT P2

	PUSH	HL
	POP		IX
	JP		WM_MOUSE_CLICK

	
WM_DRAW_WINDOW:
; IX: WINDOW

	LD		A,(IX+WIN_FLAGS)
	BIT		VISIBLE_BIT,A
	JR		Z,.NEXT_WINDOW
	
	BIT		DIRTY_BIT,A
	JR		Z,.CHILD_WINDOW
	
	LD		L,(IX+WIN_DRAW_F)
	LD		H,(IX+WIN_DRAW_F+1)
	PUSH	AF
	PUSH	IX
	CALL	.DRAW_F
	POP		IX
	POP		AF
	RES		DIRTY_BIT,A
	LD		(IX+WIN_FLAGS),A
	JR		.CHILD_WINDOW
.DRAW_F:
	JP		(HL)
.CHILD_WINDOW:
	LD		A,(IX+OBJ_TYPE)
	CP		VIEW_TYPE
	JR		Z,.NEXT_WINDOW
	
	LD		L,(IX+WIN_CHILD)
	LD		H,(IX+WIN_CHILD+1)
	LD		A,L
	OR		H
	JR		Z,.NEXT_WINDOW

	EXX	
	LD		HL,(PARENT_ORIGIN)
	PUSH	HL
	LD		E,(IX+AREA_P0+PY)
	LD		D,(IX+AREA_P0+PX)	
	LD		A,H
	ADD		A,D
	LD		H,A ; REL X
	LD		A,L
	ADD		A,E
	LD		L,A ; REL Y
	LD		(PARENT_ORIGIN),HL
	EXX

	CALL	GET_P2
	PUSH	AF ; SAVE P2
	LD		A,(IX+WIN_CHILD+2)
	CALL	PUT_P2 ; CHANGE TO CHILD P2
	
	PUSH	IX
	PUSH	HL
	POP		IX
	CALL	WM_DRAW_WINDOW
	POP		IX ; RESTORE THIS
	POP		AF ; RESTORE P2
	CALL	PUT_P2
	POP		HL ; RESTORE PARENT ORIGIN
	LD		(PARENT_ORIGIN),HL
	
.NEXT_WINDOW:
	LD		A,(FAST_DRAW)
	OR		A
	JR		Z,.FULL_DRAW
	
	PUSH	IX
	POP		HL
	LD		A,(FOCUS_WINDOW+2)
	OR		A
	JR		Z,.CUR_VIEW
	LD		DE,(FOCUS_WINDOW)
	AND		A
	SBC		HL,DE
	JR		NZ,.FULL_DRAW
	RET
	
.CUR_VIEW:
	LD		DE,(CUR_VIEW)
	AND		A
	SBC		HL,DE
	JR		NZ,.FULL_DRAW
	RET
		
.FULL_DRAW:
	LD		A,(IX+OBJ_TYPE)
	CP		DDOWN_MENU_TYPE
	JR		NZ,.NEXT
	LD		A,(IX+WIN_FLAGS)
	BIT		VISIBLE_BIT,A
	RET		Z
.NEXT:
	LD		L,(IX+WIN_NEXT)
	LD		H,(IX+WIN_NEXT+1)
	LD		A,H
	OR		L
	RET		Z
	
	LD		A,(IX+WIN_NEXT+2)
	CALL	PUT_P2 ; CHANGE TO NEXT P2

	PUSH	HL
	POP		IX
	JP		WM_DRAW_WINDOW

WINDOW_UPDATE_MENU:
; A EVENT
; DE DATA
	PUSH	AF
	CP		LCLICKPRESS_EVENT
	JP		NZ,.KEYPRESS

	LD		HL,(FOCUS_WINDOW)
	LD		A,H
	OR		L
	JR		Z,.NO_FOCUS
	CALL	GET_P2
	PUSH	AF
	LD		A,(FOCUS_WINDOW+2)
	CALL	PUT_P2
	PUSH	IX
	PUSH	HL
	POP		IX
	CALL	WINDOW_LOSE_FOCUS
	POP		IX
	POP		AF
	CALL	PUT_P2
.NO_FOCUS:
	CALL	WINDOW_SET_FOCUS
	JP		.EXIT
.KEYPRESS:
	CP		KEYPRESS_EVENT
	JP		NZ,.ENTER_FOCUS
	LD		A,E
	CP		$1B ; ESC KEY
	JR		NZ,.DOWN	
	CALL	WINDOW_LOSE_FOCUS
	JP		.EXIT
.DOWN:	
	CP		GKEY_DOWN ; DOWN KEY
	JR		NZ,.UP
	CALL	WINDOW_GO_NEXT_CONTROL
	JP		.EXIT
.UP:
	CP		GKEY_UP; UP KEY
	JP		NZ,.RIGHT
	CALL	WINDOW_GO_PREV_CONTROL	
	JP		.EXIT
.RIGHT:
	CP		GKEY_RIGHT; RIGHT KEY
	JP		NZ,.LEFT
	
	CALL	GET_P2
	PUSH	AF
	PUSH	IX
	CALL	WINDOW_LOSE_FOCUS
	POP		IX
	POP		AF
	CALL	PUT_P2
	
.NEXT_SIBLING:
	LD		L,(IX+WIN_NEXT)
	LD		H,(IX+WIN_NEXT+1)
	LD		A,L
	OR		H
	JR		Z,.GO_FIRST_CHILD
	LD		A,(IX+WIN_NEXT+2)
	CALL	PUT_P2
	PUSH	HL
	POP		IX
	LD		A,(IX+OBJ_TYPE)
	CP		MENU_TYPE
	JR		NZ,.NEXT_SIBLING
	
	CALL	WINDOW_SET_FOCUS
	JP		.EXIT
	
.GO_FIRST_CHILD:
	LD		L,(IX+WIN_PARENT)
	LD		H,(IX+WIN_PARENT+1)
	LD		A,(IX+WIN_PARENT+2)
	CALL	PUT_P2
	PUSH	HL
	POP		IX
	LD		L,(IX+WIN_CHILD)
	LD		H,(IX+WIN_CHILD+1)
	LD		A,(IX+WIN_CHILD+2)
	CALL	PUT_P2
	PUSH	HL
	POP		IX
	
	CALL	WINDOW_SET_FOCUS
	JP		.EXIT
;
;
.LEFT:
	CP		GKEY_LEFT; LEFT KEY
	JP		NZ,.ENTER_FOCUS
	
	CALL	GET_P2
	PUSH	AF
	PUSH	IX
	CALL	WINDOW_LOSE_FOCUS
	POP		IX
	POP		AF
	CALL	PUT_P2
	
.PREV_SIBLING:
	LD		L,(IX+WIN_PREV)
	LD		H,(IX+WIN_PREV+1)
	LD		A,(IX+WIN_PREV+2)
	CALL	PUT_P2
	PUSH	HL
	POP		IX
	LD		A,(IX+OBJ_TYPE)
	CP		MENU_TYPE
	JR		NZ,.PREV_SIBLING
	
	CALL	WINDOW_SET_FOCUS
	JP		.EXIT

.ENTER_FOCUS:
	CP		ENTER_EVENT
	JP		NZ,.EXIT_FOCUS

	CALL	GET_P2
	PUSH	AF
	LD		L,(IX+WIN_CHILD)
	LD		H,(IX+WIN_CHILD+1)
	LD		A,(IX+WIN_CHILD+2)
	CALL	PUT_P2
	
	WALK	HL, 0, WIN_FLAGS
.MAKE_VISIBLE:
	LD		A,(HL)
	SET		VISIBLE_BIT,A
	SET		DIRTY_BIT,A
	LD		(HL),A
	WALK	HL, WIN_FLAGS, WIN_NEXT
	LD		E,(HL)
	INC		HL
	LD		D,(HL)
	LD		A,E
	OR		D
	JR		Z,.LAST_CHILD
	INC		HL
	LD		A,(HL)
	CALL	PUT_P2
	EX		DE,HL
	WALK	HL, 0, WIN_FLAGS
	JP		.MAKE_VISIBLE
.LAST_CHILD:
	POP		AF
	CALL	PUT_P2
	JP		.EXIT
.EXIT_FOCUS:
	CP		EXIT_EVENT
	JP		NZ,.EXIT
	CALL	GET_P2
	PUSH	AF
	LD		L,(IX+WIN_CHILD)
	LD		H,(IX+WIN_CHILD+1)
	LD		A,(IX+WIN_CHILD+2)
	CALL	PUT_P2
	WALK	HL, 0, WIN_FLAGS
.MAKE_INVISIBLE:
	LD		A,(HL)
	RES		VISIBLE_BIT,A
	LD		(HL),A
	WALK	HL, WIN_FLAGS, WIN_NEXT
	LD		E,(HL)
	INC		HL
	LD		D,(HL)
	LD		A,E
	OR		D
	JR		Z,.LAST_CHILD2
	INC		HL
	LD		A,(HL)
	CALL	PUT_P2
	EX		DE,HL
	WALK	HL, 0, WIN_FLAGS
	JP		.MAKE_INVISIBLE
.LAST_CHILD2:
	POP		AF
	CALL	PUT_P2
	JP		.EXIT
.EXIT:
	POP		AF
	SCF
	RET
	
WINDOW_UPDATE:
; A EVENT
; DE DATA
	RET
	
	PUSH	AF
	CP		KEYPRESS_EVENT
	JR		NZ,.EXIT
.KEYPRESS:	
	LD		A,E
	CP		$09 ; TAB KEY
	JR		NZ,.EXIT
	CALL	WINDOW_GO_NEXT_CONTROL
	JP		.EXIT

.EXIT:
	POP		AF
	RET
	
WINDOW_UPDATE_DLG:
; A EVENT
; DE DATA
	PUSH	AF
	CALL	WINDOW_UPDATE
	CP		KEYPRESS_EVENT
	JP		Z,.KEYPRESS
	CP		EXIT_EVENT
	JP		Z,.CLOSE	
.EXIT:
	POP		AF
	OR		A
	RET
.KEYPRESS:	
	LD		A,E
	CP		$1B ; ESC KEY
	JP		Z,.ESC
	CP		'0'
	JP		M,.EXIT
	CP		':'
	JP		M,.FIND_KEY
	CP		'A'
	JP		M,.EXIT
	CP		'['
	JP		M,.FIND_KEY
	CP		'a'
	JP		M,.EXIT
	CP		'{'
	JP		M,.FIND_LOWER_KEY
	JP		.EXIT
.FIND_LOWER_KEY:
	SUB		'a'-'A'
.FIND_KEY:
	PUSH	BC
	PUSH	DE
	PUSH	HL
	LD		E,A
	LD		C,(IX+WIN_CHILD)
	LD		B,(IX+WIN_CHILD+1)
	LD		A,(IX+WIN_CHILD+2)
	OR		A
	JP		Z,.NO_KEY
	
	EX		AF,AF'
	CALL	GET_P2
	PUSH	AF
	
	EX		AF,AF'
	CALL	PUT_P2
	
	PUSH	IX

.NEXT_CONTROL:
	PUSH	BC
	POP		IX
	
	LD		A,HOTKEY_EVENT
	PUSH	DE
	SET		7,E
	CALL	WINDOW_UPDATE_FUNCTION
	POP		DE
	JR		C,.HAS_KEY

	LD		C,(IX+WIN_NEXT)
	LD		B,(IX+WIN_NEXT+1)
	LD		A,(IX+WIN_NEXT+2)
	OR		A
	JR		Z,.MISS_KEY
	JR		.NEXT_CONTROL
.HAS_KEY:
	LD		A,D
	OR		A
	JR		Z,.MISS_KEY
	LD		A,(IX+BUTTON_ID)
	EX		AF,AF'
	POP		IX	
	POP		AF
	CALL	PUT_P2
	POP		HL
	POP		DE
	POP		BC
	POP		AF
	EX		AF,AF'
	LD		D,A
	LD		A,BUTTONPRESS_EVENT
	OR		A
	RET	
.MISS_KEY:
	POP		IX	
	POP		AF
	CALL	PUT_P2
.NO_KEY:
	POP		HL
	POP		DE
	POP		BC
	POP		AF
	OR		A
	RET	
.ESC:	
	LD		A,(IX+WIN_FLAGS)
	RES		VISIBLE_BIT,A
	LD		(IX+WIN_FLAGS),A	
	CALL	WINDOW_LOSE_FOCUS
	POP		AF
	SCF
	RET
.CLOSE:
	LD		A,(IX+WIN_FLAGS)
	RES		VISIBLE_BIT,A
	LD		(IX+WIN_FLAGS),A
	;CALL	WINDOW_LOSE_FOCUS
	POP		AF
	SCF
	RET
	
WINDOW_UPDATE_DRV_DLG:
	CALL	WINDOW_UPDATE_DLG
	RET		C
	
	CP		ENTER_EVENT
	JP		Z,.ENTER
	CP		BUTTONPRESS_EVENT
	JP		Z,.BUTTONPRESS
	OR		A
	RET	
.BUTTONPRESS:
	LD		IY,(CUR_VIEW)
	LD		A,(CUR_VIEW+2)
	CALL	PUT_P2
	LD		(IY+VIEW_CUR_DRIVE),D
	LD		(IY+VIEW_RESCAN),1
	LD		(IY+VIEW_CUR_PATH),0
	PUSH	AF
	PUSH	IY
	CALL	WINDOW_UPDATE_QUIT_DLG.DISMISS
	POP		IX
	POP		AF
	CALL	PUT_P2
	JP		WINDOW_SET_FOCUS

.ENTER:
	LD		A,(PAGE2)
	CALL	PUT_P2
	LD		IY,(CUR_VIEW)
	LD		A,(IY+VIEW_CUR_DRIVE)
	OR		A
	JR		NZ,.HAS_DRIVE	
	LD		C,_CURDRV
	CALL	DOS
	INC		A
.HAS_DRIVE:
	DEC		A
	LD		E,A
	LD		C,_SELDSK
	CALL	DOS

	LD		IX,DRV_DLG_A_BUTTON
	LD		B,1
	CALL	SET_VISIBLE_DRV

	LD		IX,DRV_DLG_B_BUTTON
	LD		B,2
	CALL	SET_VISIBLE_DRV

	LD		IX,DRV_DLG_C_BUTTON
	LD		B,3
	CALL	SET_VISIBLE_DRV

	LD		IX,DRV_DLG_D_BUTTON
	LD		B,4
	CALL	SET_VISIBLE_DRV

	LD		IX,DRV_DLG_E_BUTTON
	LD		B,5
	CALL	SET_VISIBLE_DRV

	LD		IX,DRV_DLG_F_BUTTON
	LD		B,6
	CALL	SET_VISIBLE_DRV

	LD		IX,DRV_DLG_G_BUTTON
	LD		B,7
	CALL	SET_VISIBLE_DRV

	LD		IX,DRV_DLG_H_BUTTON
	LD		B,8
	CALL	SET_VISIBLE_DRV
	CP		B
	JP		M,.RAMDISK
	SCF
	RET
	
.RAMDISK:
	LD		DE,DOS_CUR_PATH
	LD		C,_GETCD
	CALL	DOS
	OR		A	
	JP		NZ,.NO_RAMDISK
	LD		A,8
	LD		B,8
	CALL	SET_VISIBLE_DRV
.NO_RAMDISK:
	SCF
	RET
	
SET_VISIBLE_DRV:
	EX		AF,AF'
	LD		A,(IX+WIN_FLAGS)
	EX		AF,AF'
	CP		B
	JP		M,.NOT_VISIBLE
	EX		AF,AF'
	SET		VISIBLE_BIT,A
	JR		.STORE
.NOT_VISIBLE:
	EX		AF,AF'
	RES		VISIBLE_BIT,A
	JR		.STORE	
.STORE:
	LD		(IX+WIN_FLAGS),A
	EX		AF,AF'
	RET
	
WINDOW_UPDATE_DELETE_DLG;
	CALL	WINDOW_UPDATE_DLG
	RET		C
	
	CP		BUTTONPRESS_EVENT
	JR		NZ,.EXIT
	
	LD		A,D
	CP		OK_BUTTON
	JR		Z,.DELETE
	CP		CANCEL_BUTTON
	JP		Z,WINDOW_UPDATE_QUIT_DLG.DISMISS
	JP		.EXIT
.DELETE:
	CALL	WINDOW_UPDATE_QUIT_DLG.DISMISS
	CALL	VIEW_DELETE_FILES
	SCF
	RET
.EXIT:	
	OR		A
	RET

WINDOW_UPDATE_RENMOVE_DLG:
	CALL	WINDOW_UPDATE_DLG
	JP		C,.CANCEL
	
	CP		BUTTONPRESS_EVENT
	JR		NZ,.EXIT
	
	LD		A,D
	CP		OK_BUTTON
	JR		Z,.MOVE
	CP		CANCEL_BUTTON
	JP		Z,WINDOW_UPDATE_QUIT_DLG.DISMISS
	JP		.EXIT
.MOVE:
	CALL	WINDOW_UPDATE_QUIT_DLG.DISMISS
	LD		IX,CONFIRM_MSG2
	WIN_SETFLAGS	0

	CALL	VIEW_MOVE_FILES
	SCF
	RET
.EXIT:	
	OR		A
	RET
.CANCEL:
	LD		IX,CONFIRM_MSG2
	WIN_SETFLAGS	0
	SCF
	RET
	
	

WINDOW_UPDATE_COPY_DLG:
	CALL	WINDOW_UPDATE_DLG
	JP		C,.CANCEL
	
	CP		BUTTONPRESS_EVENT
	JR		NZ,.EXIT
	
	LD		A,D
	CP		OK_BUTTON
	JR		Z,.COPY
	CP		CANCEL_BUTTON
	JP		Z,WINDOW_UPDATE_QUIT_DLG.DISMISS
	JP		.EXIT
.COPY:
	CALL	WINDOW_UPDATE_QUIT_DLG.DISMISS
	LD		IX,CONFIRM_MSG2
	WIN_SETFLAGS	0

	CALL	VIEW_COPY_FILES
	SCF
	RET
.EXIT:	
	OR		A
	RET
.CANCEL:
	LD		IX,CONFIRM_MSG2
	WIN_SETFLAGS	0
	SCF
	RET
	
	
WINDOW_UPDATE_QUIT_DLG:

	CALL	WINDOW_UPDATE_DLG
	RET		C
	
	CP		BUTTONPRESS_EVENT
	JR		NZ,.EXIT
	
	LD		A,D
	CP		OK_BUTTON
	JR		Z,.QUIT
	CP		CANCEL_BUTTON
	JR		Z,.DISMISS
	JP		.EXIT
.QUIT:
	LD		A,1
	LD		(REQUEST_EXIT),A
.DISMISS:
	LD		A,(IX+WIN_FLAGS)
	RES		VISIBLE_BIT,A
	LD		(IX+WIN_FLAGS),A
	
	CALL	WINDOW_LOSE_FOCUS
	SCF
	RET
.EXIT:	
	OR		A
	RET

WINDOW_GO_NEXT_CONTROL:
	CALL	GET_P2
	EX		AF,AF'	; SAVE PARENTS SEG

	LD		HL,(FOCUS_CONTROL)
	LD		A,(FOCUS_CONTROL+2)
	CALL	PUT_P2 ; SET CONTROL SEG
		
	LD		A,L
	OR		H
	JR		Z,.NO_CONTROL
	
	WALK	HL, 0, WIN_FLAGS
	LD		A,(HL)
	RES		FOCUS_BIT,A
	SET		DIRTY_BIT,A
	LD		(HL),A

.NEXT_SIBLING:
	WALK	HL, WIN_FLAGS, WIN_NEXT
	LD		E,(HL)
	INC		HL ; WIN_NEXT+1
	LD		D,(HL)
	INC		HL ; WIN_NEXT+2
	EX		DE,HL
	LD		A,L
	OR		H
	JR		Z,.GO_FIRST ; NO SIBLING, SET THIS ONE
	LD		A,(DE) ; GET NEXT'S SEG
.TEST_CONTROL:
	CALL	PUT_P2
	WALK	HL, 0, WIN_FLAGS
	LD		A,(HL)
	BIT		ITEM_BIT,A
	JR		NZ,.SET_FOCUS
	BIT		VISIBLE_BIT,A
	JR		Z,.NEXT_SIBLING
	BIT		CONTROL_BIT,A
	JR		NZ,.SET_FOCUS
	JP		.NEXT_SIBLING
	
.GO_FIRST:
	EX		AF,AF'
	CALL	PUT_P2		; PUT PARENT'S SEG ON
	EX		AF,AF'
	LD		L,(IX+WIN_CHILD)
	LD		H,(IX+WIN_CHILD+1)
	LD		A,(IX+WIN_CHILD+2)
	JP		.TEST_CONTROL
	
.SET_FOCUS:
	LD		A,(HL)
	SET		FOCUS_BIT,A
	SET		DIRTY_BIT,A
	LD		(HL),A
	
	WALK	HL,WIN_FLAGS,0
	LD		(FOCUS_CONTROL),HL
	CALL	GET_P2
	LD		(FOCUS_CONTROL+2),A
	
.NO_CONTROL:
	RET	

WINDOW_GO_PREV_CONTROL:
	CALL	GET_P2
	EX		AF,AF'	; SAVE PARENTS SEG

	LD		HL,(FOCUS_CONTROL)
	LD		A,(FOCUS_CONTROL+2)
	CALL	PUT_P2 ; SET CONTROL SEG
		
	LD		A,L
	OR		H
	JR		Z,.NO_CONTROL
	
	WALK	HL, 0, WIN_FLAGS
	LD		A,(HL)
	RES		FOCUS_BIT,A
	SET		DIRTY_BIT,A
	LD		(HL),A

.PREV_SIBLING:
	WALK	HL, WIN_FLAGS, WIN_PREV
	LD		E,(HL)
	INC		HL ; WIN_PREV+1
	LD		D,(HL)
	INC		HL ; WIN_PREV+2
	EX		DE,HL
	LD		A,L
	OR		H
	JR		Z,.GO_FIRST ; NO SIBLING, SET THIS ONE
	LD		A,(DE) ; GET NEXT'S SEG
.TEST_CONTROL:
	CALL	PUT_P2
	WALK	HL, 0, WIN_FLAGS
	LD		A,(HL)
	BIT		ITEM_BIT,A
	JR		NZ,.SET_FOCUS
	BIT		VISIBLE_BIT,A
	JR		Z,.PREV_SIBLING
	BIT		CONTROL_BIT,A
	JR		NZ,.SET_FOCUS
	JP		.PREV_SIBLING
	
.GO_FIRST:
	EX		AF,AF'
	CALL	PUT_P2		; PUT PARENT'S SEG ON
	EX		AF,AF'
	LD		L,(IX+WIN_CHILD)
	LD		H,(IX+WIN_CHILD+1)
	LD		A,(IX+WIN_CHILD+2)
	JP		.TEST_CONTROL
	
.SET_FOCUS:
	LD		A,(HL)
	SET		FOCUS_BIT,A
	SET		DIRTY_BIT,A
	LD		(HL),A
	
	WALK	HL,WIN_FLAGS,0
	LD		(FOCUS_CONTROL),HL
	CALL	GET_P2
	LD		(FOCUS_CONTROL+2),A
	
.NO_CONTROL:
	RET	
	
WINDOW_PARENT_ORIGIN:

	PUSH	DE
	LD		DE,(PARENT_ORIGIN)

	LD		A,H
	ADD		A,D
	LD		H,A

	LD		A,L
	ADD		A,E
	LD		L,A
	
	POP		DE
	PUSH	HL
	LD		HL,(PARENT_ORIGIN)
	
	LD		A,H
	ADD		A,D
	LD		D,A

	LD		A,L
	ADD		A,E
	LD		E,A
	
	POP		HL
	
	RET
	
WINDOW_DRAW_MENU:
; HL: P0
; DE: P1
; A: ATTR: BIT 7: INVERSE, BIT 0: BLINK
	
	LD		H,(IX+AREA_P0+PX)
	LD		L,(IX+AREA_P0+PY)
	LD		D,(IX+AREA_P1+PX)
	LD		E,(IX+AREA_P1+PY)
	CALL	WINDOW_PARENT_ORIGIN
	LD		A,(IX+WIN_ATTR)
	
	PUSH	AF

	LD		A,(IX+WIN_FLAGS)
	BIT		FOCUS_BIT,A	; TEST FOCUS
	JR		Z,.NO_FOCUS
	
	POP		AF
	;CPL
	LD		A,BLACK_COLOR
	PUSH	AF
	
.NO_FOCUS:
	EX		DE,HL
	LD		L,(IX+WIN_LABEL)
	LD		H,(IX+WIN_LABEL+1)
	CALL	STRLEN
	POP		AF
	INC		D
	CALL	VIDEO_PRINT_SIZE
	RET
	
.HAS_FOCUS:
	POP		AF
	RET

DRAW_AREA:

	PUSH	AF
	PUSH	HL
	
	LD		A,D
	SUB		H
	LD		C,A				; WIDTH
	INC		C
	LD		A,E
	SUB		L
	LD		B,A
	INC		B				; HEIGHT

	PUSH	BC
	LD		B,C
	LD		HL,TMP_STR
.LOOP_ROW:
	LD		(HL),32
	INC		HL
	DJNZ	.LOOP_ROW
	POP		BC
	
	POP		DE
	POP		AF
.LINE_LOOP:
	PUSH	AF
	PUSH	BC
	PUSH	DE
	LD		B,C
	LD		HL,TMP_STR
	CALL	VIDEO_PRINT_SIZE
	POP		DE
	POP		BC
	POP		AF
	INC		E
	DJNZ	.LINE_LOOP	

	RET
	
WINDOW_DRAW_MENU_BAR:	

	LD		H,(IX+AREA_P0+PX)
	LD		L,(IX+AREA_P0+PY)
	LD		D,(IX+AREA_P1+PX)
	LD		E,(IX+AREA_P1+PY)
	CALL	WINDOW_PARENT_ORIGIN
	LD		A,(IX+WIN_ATTR)

	PUSH	AF
	PUSH	HL
	CALL	DRAW_AREA
	POP		DE
	POP		AF
	
	RET

WINDOW_DRAW_FKEY:	
	
	LD		D,(IX+AREA_P0+PX)
	LD		E,(IX+AREA_P0+PY)
	CALL	WINDOW_PARENT_ORIGIN
	LD		A,(IX+WIN_ATTR)

	PUSH	AF
	PUSH	DE
	
	LD		L,(IX+FKEY_LABEL)
	LD		H,(IX+FKEY_LABEL+1)
	CALL	STRLEN
	PUSH	BC
	LD		A,(IX+WIN_ATTR)
	BIT		7,A
	JR		Z,.SET_BIT	
	RES		7,A
	JR		.PRINT
.SET_BIT:
	SET		7,A
.PRINT:
	CALL	VIDEO_PRINT_SIZE

	POP		BC	
	POP		DE
	LD		A,D
	ADD		A,B
	LD		D,A
	POP		AF	
	LD		L,(IX+WIN_LABEL)
	LD		H,(IX+WIN_LABEL+1)
	CALL	STRLEN
	CALL	VIDEO_PRINT_SIZE
	
	RET
	
DRAW_BOX:
; HL : P0
; DE : P1
; A : ATTR
	PUSH		DE
	PUSH		HL
	
	PUSH		DE	
	PUSH		HL
	EX			AF,AF'
	EXX

	POP			HL
	POP			DE
	
	LD			A,D
	SUB			H
	LD			B,A
	INC			B
	LD			HL,TMP_STR
	LD			A,WIN_UL
	LD			(HL),A
	INC			HL
	
	PUSH		BC
	DEC			B
	DEC			B
	LD			A,WIN_H
.LOOP_TOP:
	LD			(HL),A
	INC			HL
	DJNZ		.LOOP_TOP
	LD			A,WIN_UR
	LD			(HL),A	
	
	EXX
	EX			AF,AF'
	
	POP			BC				; REST SIZE
	
	PUSH		AF				; SAVE ATTR
	PUSH		BC				; SAVE SIZE
	PUSH		DE				; SAVE P1
	PUSH		HL				; SAVE P0
	
	PUSH		AF
	PUSH		BC
	PUSH		DE
	PUSH		HL
	
	LD			D,H
	LD			E,L				; DE=COL : LINE
	LD			HL,TMP_STR
	CALL		VIDEO_PRINT_SIZE

	POP			HL
	POP			DE
	POP			BC
	
	LD			D,H				; D=P0.X
	LD			HL,TMP_STR
	LD			A,WIN_BL
	LD			(HL),A
	LD			A,L
	DEC			B
	ADD			A,B
	INC			B
	LD			L,A
	LD			A,0
	ADC			A,H
	LD			H,A
	LD			A,WIN_BR
	LD			(HL),A
	LD			HL,TMP_STR
	POP			AF
	CALL		VIDEO_PRINT_SIZE
		
	POP			HL
	POP			DE
	POP			BC
	POP			AF

	PUSH		BC				; SAVE SIZE
	EXX
	EX			AF,AF'
	POP			BC
	
	LD			HL,TMP_STR
	LD			A,WIN_V
	LD			(HL),A
	INC			HL
	DEC			B
	DEC			B
	LD			A,32
.LOOP_MIDDLE:
	LD			(HL),A
	INC			HL
	DJNZ		.LOOP_MIDDLE
	LD			A,WIN_V
	LD			(HL),A	
	
	EXX
	EX			AF,AF'
	PUSH		AF				; SAVE ATTR
	
	LD			A,E
	SUB			L
	DEC			A
	LD			C,A

	INC			L
	LD			D,H
	LD			E,L				; DE=COL : LINE

	LD			L,B
	LD			B,C
	POP			AF
.LOOP_PRINT_MIDDLE:
	PUSH		AF
	PUSH		BC
	PUSH		DE
	PUSH		HL
	LD			B,L
	LD			HL,TMP_STR
	CALL		VIDEO_PRINT_SIZE
	POP			HL
	POP			DE
	POP			BC
	POP			AF
	INC			E
	DJNZ		.LOOP_PRINT_MIDDLE
BREAK:
	POP			HL
	POP			DE

	LD			A,D
	SUB			H
	SRA			A
	LD			C,A
	
	RET
	
WINDOW_DRAW_BOX:

	LD			H,(IX+AREA_P0+PX)
	LD			L,(IX+AREA_P0+PY)
	LD			D,(IX+AREA_P1+PX)
	LD			E,(IX+AREA_P1+PY)
	CALL		WINDOW_PARENT_ORIGIN
	LD			A,(IX+WIN_ATTR)

	CALL		DRAW_BOX
	
	EX			DE,HL
	LD			L,(IX+WIN_LABEL)
	LD			H,(IX+WIN_LABEL+1)
	CALL		STRLEN	
	PUSH		BC
	SRA			B
	LD			A,C
	SUB			B
	ADD			A,D
	LD			D,A
	LD			A,(IX+WIN_ATTR)
	POP			BC
	CALL		VIDEO_PRINT_SIZE
	
	RET

WINDOW_DRAW_DIALOG:
	LD		H,(IX+AREA_P0+PX)
	LD		L,(IX+AREA_P0+PY)
	LD		D,(IX+AREA_P1+PX)
	LD		E,(IX+AREA_P1+PY)
	CALL	WINDOW_PARENT_ORIGIN
	LD		A,(IX+WIN_ATTR)

	PUSH		AF
	PUSH		DE
	PUSH		HL
	CALL		DRAW_AREA
	POP			HL
	POP			DE
	POP			AF

	INC			H
	INC			L
	DEC			D
	DEC			E
	CALL		DRAW_BOX
	
	EX			DE,HL
	LD			L,(IX+WIN_LABEL)
	LD			H,(IX+WIN_LABEL+1)
	CALL		STRLEN	
	PUSH		BC
	SRA			B
	LD			A,C
	SUB			B
	ADD			A,D
	LD			D,A
	LD			A,(IX+WIN_ATTR)
	POP			BC
	CALL		VIDEO_PRINT_SIZE

	RET
	
WINDOW_DRAW_LABEL:
	LD		H,(IX+AREA_P0+PX)
	LD		L,(IX+AREA_P0+PY)
	LD		D,(IX+AREA_P1+PX)
	LD		E,(IX+AREA_P1+PY)
	CALL	WINDOW_PARENT_ORIGIN
	LD		A,(IX+WIN_ATTR)

	EX		DE,HL
	LD		L,(IX+WIN_LABEL)
	LD		H,(IX+WIN_LABEL+1)
	LD		B,A
	LD		A,H
	OR		L
	RET		Z
	LD		A,B
	CALL	STRLEN
	CALL	VIDEO_PRINT_SIZE

	RET
	
WINDOW_DRAW_BUTTON:
	LD		H,(IX+AREA_P0+PX)
	LD		L,(IX+AREA_P0+PY)
	LD		D,(IX+AREA_P1+PX)
	LD		E,(IX+AREA_P1+PY)
	CALL	WINDOW_PARENT_ORIGIN
	
	LD		A,(IX+WIN_ATTR)
	LD		B,(IX+WIN_FLAGS)
	BIT		FOCUS_BIT,B
	JR		Z,.NOT_FOCUSED
	LD		A,BLUE_COLOR

	PUSH	AF
	PUSH	DE
	PUSH	HL

	LD		A,H
	LD		H,0
	ADD		HL,HL
	EX		DE,HL
	LD		HL,PREMULT_TBL
	ADD		HL,DE
	LD		E,(HL)
	INC		HL
	LD		D,(HL)
	LD		H,0
	LD		L,A
	ADD		HL,DE

	LD		E,(IX+WIN_LABEL)
	LD		D,(IX+WIN_LABEL+1)
	DEC		HL
.LOOP:
	LD		A,(DE)
	INC		DE
	INC		HL
	OR		A
	JR		Z,.SET_CURSOR
	BIT		7,A
	JP		NZ,.SET_CURSOR
	JP		.LOOP
.SET_CURSOR:
	LD		(CURSOR_POS),HL
	POP		HL
	POP		DE
	POP		AF
	
.NOT_FOCUSED:

	EX		DE,HL
	LD		L,(IX+WIN_LABEL)
	LD		H,(IX+WIN_LABEL+1)
	CALL	STRLEN
	
	CALL	VIDEO_PRINT_SIZE

	RET

WINDOW_DRAW_CHECK_BOX:
	LD		H,(IX+AREA_P0+PX)
	LD		L,(IX+AREA_P0+PY)
	LD		D,(IX+AREA_P1+PX)
	LD		E,(IX+AREA_P1+PY)
	CALL	WINDOW_PARENT_ORIGIN
	
	LD		A,(IX+WIN_ATTR)
	LD		B,(IX+WIN_FLAGS)
	BIT		FOCUS_BIT,B
	JR		Z,.NOT_FOCUSED
	LD		A,BLUE_COLOR

	PUSH	AF
	PUSH	DE
	PUSH	HL

	LD		A,H
	LD		H,0
	ADD		HL,HL
	EX		DE,HL
	LD		HL,PREMULT_TBL
	ADD		HL,DE
	LD		E,(HL)
	INC		HL
	LD		D,(HL)
	LD		H,0
	LD		L,A
	ADD		HL,DE
	INC		HL
	;INC		HL
	LD		(CURSOR_POS),HL
	POP		HL
	POP		DE
	POP		AF
	
.NOT_FOCUSED:

	EX		DE,HL
	LD		L,(IX+WIN_LABEL)
	LD		H,(IX+WIN_LABEL+1)

	INC		HL
	EX		AF,AF'
	LD		A,(IX+CHECK_BOX_VALUE)
	OR		A
	JR		Z,.UNCHECKED
	LD		A,'X'
	LD		(HL),A
	JR		.CONT
.UNCHECKED:
	LD		A,' '
	LD		(HL),A
.CONT:
	DEC		HL
	EX		AF,AF'
	CALL	STRLEN
	CALL	VIDEO_PRINT_SIZE

	RET

	
WINDOW_DRAW_MENU_ITEM:
	LD		H,(IX+AREA_P0+PX)
	LD		L,(IX+AREA_P0+PY)
	LD		D,(IX+AREA_P1+PX)
	LD		E,(IX+AREA_P1+PY)
	CALL	WINDOW_PARENT_ORIGIN
	
	LD		A,(IX+WIN_ATTR)
	LD		B,(IX+WIN_FLAGS)
	BIT		FOCUS_BIT,B
	JR		Z,.NOT_FOCUSED
	LD		A,BLACK_COLOR

	PUSH	AF
	PUSH	DE
	PUSH	HL
	LD		A,H
	LD		H,0
	ADD		HL,HL
	EX		DE,HL
	LD		HL,PREMULT_TBL
	ADD		HL,DE
	LD		E,(HL)
	INC		HL
	LD		D,(HL)
	LD		H,0
	LD		L,A
	ADD		HL,DE
	INC		HL
	LD		(CURSOR_POS),HL
	POP		HL
	POP		DE
	POP		AF
	
.NOT_FOCUSED:

	EX		DE,HL
	LD		L,(IX+WIN_LABEL)
	LD		H,(IX+WIN_LABEL+1)
	CALL	STRLEN
	
	CALL	VIDEO_PRINT_SIZE

	RET

	
WINDOW_LOSE_FOCUS:
	LD		HL,$0000
	LD		(FOCUS_CONTROL),HL
	XOR		A
	LD		(FOCUS_CONTROL+2),A
	LD		HL,$FFFF
	LD		(CURSOR_POS),HL
	
	PUSH	IX
	LD		HL,WINDOW_LIST
	PUSH	HL
	POP		IX
	CALL	WINDOW_SET_DIRTY
	POP		IX
	
	LD		L,(IX+WIN_UPDATE_F)
	LD		H,(IX+WIN_UPDATE_F+1)
	LD		A,L
	OR		H
	JR		Z,.LOSE_FOCUS

	LD		A,EXIT_EVENT
	CALL	.UPDATE
	JR		.LOSE_FOCUS
.UPDATE:
	JP		(HL)	
.LOSE_FOCUS:
	LD		A,(IX+WIN_FLAGS)
	RES		FOCUS_BIT,A
	SET		DIRTY_BIT,A
	LD		(IX+WIN_FLAGS),A
	LD		L,(IX+WIN_LASTFOCUS)
	LD		H,(IX+WIN_LASTFOCUS+1)
	LD		A,(IX+WIN_LASTFOCUS+2)
	LD		(FOCUS_WINDOW),HL
	LD		(FOCUS_WINDOW+2),A
	LD		A,L
	OR		H
	RET		Z

	PUSH	IX
	PUSH	HL
	POP		IX
	CALL	WINDOW_SET_FOCUS
	POP		IX
	
	RET
	
WINDOW_CLOSE:
	LD		A,(IX+WIN_FLAGS)
	RES		VISIBLE_BIT,A
	LD		(IX+WIN_FLAGS),A
	CALL	WINDOW_LOSE_FOCUS
	RET

WINDOW_OPEN:
	LD		A,(IX+WIN_FLAGS)
	SET		VISIBLE_BIT,A
	SET		DIRTY_BIT,A
	LD		(IX+WIN_FLAGS),A

	CALL	GET_P2
	PUSH	AF
	PUSH	IX
	CALL	WINDOW_SET_FOCUS
	POP		IX
	POP		AF
	CALL	PUT_P2
	
	LD		L,(IX+WIN_CHILD)
	LD		H,(IX+WIN_CHILD+1)

	LD		A,L
	OR		H
	RET		Z
	
	CALL	GET_P2
	PUSH	AF
	LD		A,(IX+WIN_CHILD+2)
	CALL	PUT_P2
	
	PUSH	IX
	PUSH	HL
	POP		IX
	CALL	WINDOW_SET_DIRTY
	POP		IX
	POP		AF
	CALL	PUT_P2
	RET
	
WINDOW_SET_FOCUS:

	LD		HL,(FOCUS_WINDOW)
	LD		A,(FOCUS_WINDOW+2)
	LD		(IX+WIN_LASTFOCUS),L
	LD		(IX+WIN_LASTFOCUS+1),H
	LD		(IX+WIN_LASTFOCUS+2),A
	
	OR		A
	JR		Z,.NO_FOCUS
	EX		AF,AF'
	CALL	GET_P2
	PUSH	AF
	EX		AF,AF'
	PUSH	IX
	PUSH	HL
	POP		IX
	CALL	PUT_P2
	XOR		A
	LD		(IX+WIN_LASTFOCUS),A
	LD		(IX+WIN_LASTFOCUS+1),A
	LD		(IX+WIN_LASTFOCUS+2),A
	CALL	WINDOW_LOSE_FOCUS
	POP		IX
	POP		AF
	CALL	PUT_P2
	
.NO_FOCUS:
	LD		A,(IX+WIN_FLAGS)
	SET		FOCUS_BIT,A
	SET		DIRTY_BIT,A
	LD		(IX+WIN_FLAGS),A
	
	LD		L,(IX+WIN_UPDATE_F)
	LD		H,(IX+WIN_UPDATE_F+1)
	LD		A,L
	OR		H
	JR		Z,.SET_FOCUS

	CALL	GET_P2
	PUSH	AF
	PUSH	IX
	LD		A,ENTER_EVENT
	CALL	.UPDATE
	POP		IX
	POP		AF
	CALL	PUT_P2
	JR		.SET_FOCUS
.UPDATE:
	JP		(HL)
	
.SET_FOCUS:
	PUSH	IX
	POP		HL
	LD		(FOCUS_WINDOW),HL
	CALL	GET_P2
	LD		(FOCUS_WINDOW+2),A
	LD		HL,$0000
	LD		(FOCUS_CONTROL),HL
	XOR		A
	LD		(FOCUS_CONTROL+2),A
	
	LD		L,(IX+WIN_CHILD)
	LD		H,(IX+WIN_CHILD+1)
	
	LD		A,L
	OR		H
	RET		Z

	CALL	GET_P2
	PUSH	AF ; SAVE P2

	LD		A,(IX+WIN_CHILD+2)
	CALL	PUT_P2
	
	PUSH	AF

	PUSH	HL
	POP		IX	
		
	PUSH	IX
	CALL	WINDOW_CLEAN_FOCUS_CONTROL
	POP		IX
	
	POP		AF
	CALL	PUT_P2
	
		
	CALL	WINDOW_SET_FOCUS_CONTROL

	POP		AF
	CALL	PUT_P2 ; RESTORE P2
	
	RET
	
WINDOW_SET_VISIBLE:
	LD		A,(IX+WIN_FLAGS)
	BIT		DIRTY_BIT,A
	BIT		VISIBLE_BIT,A
	LD		(IX+WIN_FLAGS),A
	
	LD		L,(IX+WIN_CHILD)
	LD		H,(IX+WIN_CHILD+1)
	LD		A,L
	OR		H
	RET		Z
	
	LD		A,(IX+WIN_CHILD+2)
	CALL	PUT_P2
	
	PUSH	HL
	POP		IX
	JP		WINDOW_SET_DIRTY
	
WINDOW_SET_DIRTY:
	LD		A,(IX+WIN_FLAGS)
	SET		DIRTY_BIT,A
	LD		(IX+WIN_FLAGS),A
	
	LD		L,(IX+WIN_CHILD)
	LD		H,(IX+WIN_CHILD+1)
	LD		A,L
	OR		H
	JR		Z,.NEXT_WINDOW
	
	CALL	GET_P2
	PUSH	AF
	LD		A,(IX+WIN_CHILD+2)
	CALL	PUT_P2
	
	PUSH	IX
	PUSH	HL
	POP		IX
	CALL	WINDOW_SET_DIRTY
	POP		IX
	
	POP		AF
	CALL	PUT_P2
	
.NEXT_WINDOW:
	LD		L,(IX+WIN_NEXT)
	LD		H,(IX+WIN_NEXT+1)
	LD		A,L
	OR		H
	RET		Z
	
	LD		A,(IX+WIN_NEXT+2)
	CALL	PUT_P2
	
	PUSH	HL
	POP		IX
	JP		WINDOW_SET_DIRTY

WINDOW_CLEAN_FOCUS_CONTROL:
	LD		A,(IX+WIN_FLAGS)
	BIT		CONTROL_BIT,A
	JR		Z,.NEXT_CHILD
	RES		FOCUS_BIT,A
	LD		(IX+WIN_FLAGS),A
	
.NEXT_CHILD:
	LD		L,(IX+WIN_CHILD)
	LD		H,(IX+WIN_CHILD+1)
	LD		A,L
	OR		H
	JR		Z,.NEXT_WINDOW

	CALL	GET_P2
	PUSH	AF
	LD		A,(IX+WIN_CHILD+2)
	CALL	PUT_P2
	
	PUSH	IX
	PUSH	HL
	POP		IX
	CALL	WINDOW_CLEAN_FOCUS_CONTROL
	POP		IX
	
	EX		AF,AF'
	
	POP		AF
	CALL	PUT_P2
	
	EX		AF,AF'
	RET		C
	
.NEXT_WINDOW:
	LD		L,(IX+WIN_NEXT)
	LD		H,(IX+WIN_NEXT+1)
	LD		A,L
	OR		H
	RET		Z

	LD		A,(IX+WIN_NEXT+2)
	CALL	PUT_P2
	
	PUSH	HL
	POP		IX
	JP		WINDOW_CLEAN_FOCUS_CONTROL
	
WINDOW_SET_FOCUS_CONTROL:
	
	LD		A,(IX+WIN_FLAGS)
	BIT		VISIBLE_BIT,A
	JR		Z,.NEXT_CHILD
	BIT		CONTROL_BIT,A
	JR		Z,.NEXT_CHILD
	SET		FOCUS_BIT,A
	LD		(IX+WIN_FLAGS),A
	
	PUSH	IX
	POP		HL
	LD		(FOCUS_CONTROL),HL
	CALL	GET_P2
	LD		(FOCUS_CONTROL+2),A
		
	SCF	
	RET

.NEXT_CHILD:
	LD		L,(IX+WIN_CHILD)
	LD		H,(IX+WIN_CHILD+1)
	LD		A,L
	OR		H
	JR		Z,.NEXT_WINDOW

	CALL	GET_P2
	PUSH	AF
	LD		A,(IX+WIN_CHILD+2)
	CALL	PUT_P2
	
	PUSH	IX
	PUSH	HL
	POP		IX
	CALL	WINDOW_SET_FOCUS_CONTROL
	POP		IX
	
	EX		AF,AF'
	POP		AF
	CALL	PUT_P2
	
	EX		AF,AF' 
	RET		C
	
.NEXT_WINDOW:
	LD		L,(IX+WIN_NEXT)
	LD		H,(IX+WIN_NEXT+1)
	LD		A,L
	OR		H
	RET		Z

	LD		A,(IX+WIN_NEXT+2)
	CALL	PUT_P2

	PUSH	HL
	POP		IX
	JP		WINDOW_SET_FOCUS_CONTROL
	
BUTTON_UPDATE:
	CALL	CONTROL_UPDATE
	CP		KEYPRESS_EVENT
	JR		NZ,.LCLICKPRESS
	LD		A,E
	CP		$09 ; TAB KEY
	JR		Z,.GO_NEXT
	CP		GKEY_RIGHT; RIGHT KEY
	JR		Z,.GO_NEXT
	CP		GKEY_DOWN; RIGHT KEY
	JR		Z,.GO_NEXT
	JP		.LEFT
.GO_NEXT:
	LD		L,(IX+WIN_PARENT)
	LD		H,(IX+WIN_PARENT+1)
	LD		A,(IX+WIN_PARENT+2)
	CALL	PUT_P2
	PUSH	HL
	POP		IX
	CALL	WINDOW_GO_NEXT_CONTROL	
	SCF
	RET
.LEFT:
	CP		GKEY_LEFT; LEFT KEY
	JR		Z,.GO_PREV
	CP		GKEY_UP; LEFT KEY
	JR		Z,.GO_PREV
	LD		A,E
	CP		$0D ; RETURN
	JR		Z,.BUTTONPRESS
	CP		$20 ; SPACE
	JR		Z,.BUTTONPRESS
	OR		A
	RET
.BUTTONPRESS:	
	LD		D,(IX+BUTTON_ID)
	LD		L,(IX+WIN_PARENT)
	LD		H,(IX+WIN_PARENT+1)
	LD		A,(IX+WIN_PARENT+2)
	CALL	PUT_P2
	PUSH	HL
	POP		IX
	LD		A,BUTTONPRESS_EVENT
	CALL	WINDOW_UPDATE_FUNCTION
	SCF
	RET
.GO_PREV:
	CALL	WINDOW_GO_PREV_CONTROL
	SCF
	RET
.LCLICKPRESS:	
	CP		LCLICKPRESS_EVENT
	JP		Z,.EXECUTE
	CP		HOTKEY_EVENT
	RET		NZ
.HOT_KEY:
	LD		A,(IX+WIN_FLAGS)
	BIT		VISIBLE_BIT,A
	RET		Z
	LD		L,(IX+WIN_LABEL)
	LD		H,(IX+WIN_LABEL+1)
.LOOP:
	LD		A,(HL)
	INC		HL
	OR		A
	RET		Z
	CP		E
	JR		Z,.FOUND
	SUB		'a'-'A'
	CP		E
	JR		Z,.FOUND
	JR		.LOOP
.FOUND:
	CALL	CONTROL_UPDATE.IS_SELECTABLE
	SCF
	RET
	
.EXECUTE:		
	CALL	GET_P2
	PUSH	AF
	LD		D,(IX+BUTTON_ID)
	LD		L,(IX+WIN_PARENT)
	LD		H,(IX+WIN_PARENT+1)
	LD		A,(IX+WIN_PARENT+2)
	CALL	PUT_P2
	PUSH	HL
	POP		IX
	
	LD		L,(IX+WIN_UPDATE_F)
	LD		H,(IX+WIN_UPDATE_F+1)
	LD		A,BUTTONPRESS_EVENT
	CALL	.UPDATE_F
	JR		.RESTORE
.UPDATE_F:
	JP		(HL)
.RESTORE:		
	POP		AF
	CALL	PUT_P2
	RET
	
CHECK_BOX_UPDATE:
	CALL	CONTROL_UPDATE
	CP		KEYPRESS_EVENT
	JR		NZ,.LCLICKPRESS
	LD		A,E
	CP		$09 ; TAB KEY
	JR		Z,.GO_NEXT
	CP		GKEY_RIGHT; RIGHT KEY
	JR		Z,.GO_NEXT
	CP		GKEY_DOWN; RIGHT KEY
	JR		Z,.GO_NEXT
	JP		.LEFT
.GO_NEXT:
	LD		L,(IX+WIN_PARENT)
	LD		H,(IX+WIN_PARENT+1)
	LD		A,(IX+WIN_PARENT+2)
	CALL	PUT_P2
	PUSH	HL
	POP		IX
	CALL	WINDOW_GO_NEXT_CONTROL	
	SCF
	RET
.LEFT:
	CP		GKEY_LEFT; LEFT KEY
	JR		Z,.GO_PREV
	CP		GKEY_UP; LEFT KEY
	JR		Z,.GO_PREV
	LD		A,E
	CP		$0D ; RETURN
	JR		Z,.BUTTONPRESS
	CP		$20 ; SPACE
	JR		Z,.BUTTONPRESS
	OR		A
	RET
.BUTTONPRESS:
	LD		A,(IX+CHECK_BOX_VALUE)
	CPL	
	LD		(IX+CHECK_BOX_VALUE),A
	LD		A,(IX+WIN_FLAGS)
	SET		DIRTY_BIT,A
	LD		(IX+WIN_FLAGS),A
	SCF
	RET
.GO_PREV:
	CALL	WINDOW_GO_PREV_CONTROL
	SCF
	RET
.LCLICKPRESS:	
	CP		LCLICKPRESS_EVENT
	JP		Z,.BUTTONPRESS
	CP		HOTKEY_EVENT
	RET		NZ
.HOT_KEY:
	LD		A,(IX+WIN_FLAGS)
	BIT		VISIBLE_BIT,A
	RET		Z
	LD		L,(IX+WIN_LABEL)
	LD		H,(IX+WIN_LABEL+1)
.LOOP:
	LD		A,(HL)
	INC		HL
	OR		A
	RET		Z
	CP		E
	JR		Z,.FOUND
	SUB		'a'-'A'
	CP		E
	JR		Z,.FOUND
	JR		.LOOP
.FOUND:
	CALL	CONTROL_UPDATE.IS_SELECTABLE
	SCF
	RET
	
%MACRO	TEST_FKEY %N,%N, %N
	LD		A,#1
	CALL	KEY_IS_PRESSED
	JR		NC,.#EXIT
	
	%IF #2 == 0
	LD		A,KEY_SHIFT
	CALL	KEY_IS_PRESSED
	JR		C,.#EXIT
	%ELSE
	LD		A,KEY_SHIFT
	CALL	KEY_IS_PRESSED
	JR		NC,.#EXIT
	%ENDIF
	
	LD		HL,(#3+WIN_UPDATE_F)
	LD		A,H
	OR		L
	RET		Z

	LD		A,COMMAND_EVENT
	JP		(HL)
.#EXIT:
%ENDMACRO

%MACRO	TEST_CKEY %N,%N
	LD		A,#1
	CALL	KEY_IS_PRESSED
	JR		NC,.#EXIT

	LD		A,KEY_CTRL
	CALL	KEY_IS_PRESSED
	JR		NC,.#EXIT
	
	LD		A,COMMAND_EVENT
	LD		HL,#2
	JP		(HL)
.#EXIT:
%ENDMACRO

	
READ_FKEYS:
	LD		A,(PAGE2)
	CALL	PUT_P2

	TEST_FKEY KEY_F1, 0, FKEY1
	TEST_FKEY KEY_F2, 0, FKEY2
	TEST_FKEY KEY_F3, 0, FKEY3
	TEST_FKEY KEY_F4, 0, FKEY4
	TEST_FKEY KEY_F5, 0, FKEY5
	TEST_FKEY KEY_F1, 1, FKEY6
	TEST_FKEY KEY_F2, 1, FKEY7
	TEST_FKEY KEY_F3, 1, FKEY8
	TEST_FKEY KEY_F4, 1, FKEY9
	TEST_FKEY KEY_F5, 1, FKEY10

	TEST_CKEY KEY_D, MENU_UPDATE_DRV 
	TEST_CKEY KEY_R, MENU_RESCAN 
	TEST_CKEY KEY_S, MENU_SORT 
	TEST_CKEY KEY_A, MENU_ATTRIB 
	TEST_CKEY KEY_F, MENU_UPDATE_FILTER
	TEST_CKEY KEY_P, VIEW_SWAP_VIEWS.HOTKEY
	TEST_CKEY KEY_I, MENU_INFO
	RET
	
SET_INFO_FKEYS:
	LD		A,(PAGE2)
	CALL	PUT_P2

	LD				IX,FKEY2
	WIN_SETFLAGS	CONTROL_FLAGS
	WIN_SETLABEL	0
	WIN_SETUPDATE_F	WINDOW_UPDATE
	LD				IX,FKEY3
	WIN_SETFLAGS	CONTROL_FLAGS
	WIN_SETLABEL	0
	WIN_SETUPDATE_F	WINDOW_UPDATE
	LD				IX,FKEY4
	WIN_SETFLAGS	CONTROL_FLAGS
	WIN_SETLABEL	0
	WIN_SETUPDATE_F	WINDOW_UPDATE
	LD				IX,FKEY5
	WIN_SETFLAGS	CONTROL_FLAGS
	WIN_SETLABEL	0
	WIN_SETUPDATE_F	WINDOW_UPDATE
	LD				IX,FKEY6
	WIN_SETFLAGS	CONTROL_FLAGS
	WIN_SETLABEL	0
	WIN_SETUPDATE_F	WINDOW_UPDATE
	LD				IX,FKEY7
	WIN_SETFLAGS	CONTROL_FLAGS
	WIN_SETLABEL	0
	WIN_SETUPDATE_F	WINDOW_UPDATE
	LD				IX,FKEY8
	WIN_SETFLAGS	CONTROL_FLAGS
	WIN_SETLABEL	0
	WIN_SETUPDATE_F	WINDOW_UPDATE
	LD				IX,FKEY9
	WIN_SETFLAGS	CONTROL_FLAGS
	WIN_SETLABEL	0
	WIN_SETUPDATE_F	WINDOW_UPDATE

	RET

SET_EDIT_FKEYS:
	LD		A,(PAGE2)
	CALL	PUT_P2

	LD				IX,FKEY1
	WIN_SETFLAGS	CONTROL_FLAGS
	WIN_SETLABEL	0
	WIN_SETUPDATE_F	WINDOW_UPDATE

	LD				IX,FKEY9
	WIN_SETFLAGS	CONTROL_FLAGS
	WIN_SETLABEL	0
	WIN_SETUPDATE_F	WINDOW_UPDATE

	LD				IX,FKEY3
	WIN_SETFLAGS	CONTROL_FLAGS
	WIN_SETLABEL	0
	WIN_SETUPDATE_F	WINDOW_UPDATE

	LD				IX,FKEY4
	WIN_SETUPDATE_F	FKEY_UPDATE_EDIT_FROM_VIEW

	RET
	
SET_NAVIGATION_FKEYS:
	
	LD		A,(PAGE2)
	CALL	PUT_P2
	
	LD				IX,FKEY1
	WIN_SETFLAGS	CONTROL_FLAGS
	WIN_SETLABEL	STR_FKEY_HELP
	WIN_SETUPDATE_F	FKEY_UPDATE_HELP

	LD				IX,FKEY2
	WIN_SETFLAGS	CONTROL_FLAGS
	WIN_SETLABEL	STR_FKEY_USER
	WIN_SETUPDATE_F	FKEY_UPDATE_USER

	LD				IX,FKEY3
	WIN_SETFLAGS	CONTROL_FLAGS
	WIN_SETLABEL	STR_FKEY_VIEW
	WIN_SETUPDATE_F	FKEY_UPDATE_VIEW
	
	LD				IX,FKEY4
	WIN_SETFLAGS	CONTROL_FLAGS
	WIN_SETLABEL	STR_FKEY_EDIT
	WIN_SETUPDATE_F	FKEY_UPDATE_EDIT

	LD				IX,FKEY5
	WIN_SETFLAGS	CONTROL_FLAGS
	WIN_SETLABEL	STR_FKEY_COPY
	WIN_SETUPDATE_F	FKEY_UPDATE_COPY

	LD				IX,FKEY6
	WIN_SETFLAGS	CONTROL_FLAGS
	WIN_SETLABEL	STR_FKEY_RENMOV
	WIN_SETUPDATE_F	FKEY_UPDATE_RENMOV	
	
	LD				IX,FKEY7
	WIN_SETFLAGS	CONTROL_FLAGS
	WIN_SETLABEL	STR_FKEY_MKDIR
	WIN_SETUPDATE_F	FKEY_UPDATE_MKDIR	
	
	LD				IX,FKEY8
	WIN_SETFLAGS	CONTROL_FLAGS
	WIN_SETLABEL	STR_FKEY_DELETE
	WIN_SETUPDATE_F	FKEY_UPDATE_DELETE

	LD				IX,FKEY9
	WIN_SETFLAGS	CONTROL_FLAGS
	WIN_SETLABEL	STR_FKEY_PULLDN
	WIN_SETUPDATE_F	FKEY_UPDATE_PULLDN
	
	LD				IX,FKEY10
	WIN_SETFLAGS	CONTROL_FLAGS
	WIN_SETLABEL	STR_FKEY_QUIT
	WIN_SETUPDATE_F	FKEY_UPDATE_QUIT
	
	RET

FKEY_UPDATE_USER:
	PUSH	AF
	PUSH	DE
	CALL	MENU_ITEM_UPDATE
	CALL	CONTROL_UPDATE
	POP		DE
	POP		AF

	CP		COMMAND_EVENT
	JR		Z,.EXECUTE
	CP		LCLICKPRESS_EVENT
	JR		Z,.EXECUTE
	OR		A
	RET
.EXECUTE:
	CALL	CLOSE_MODALS

	XOR		A
	LD		(MENU_SELECTED_ITEM),A
	LD		(MENU_CUR_ITEM),A
	LD		(MENU_SCROLL_ITEM),A
	
	LD		A,(PAGE2)
	CALL	PUT_P2	
	CALL	VIEW_OPEN_USER_DLG
	RET
	
FKEY_UPDATE_DELETE:
	PUSH	AF
	PUSH	DE
	CALL	MENU_ITEM_UPDATE
	CALL	CONTROL_UPDATE
	POP		DE
	POP		AF

	CP		COMMAND_EVENT
	JR		Z,.EXECUTE
	CP		LCLICKPRESS_EVENT
	JR		Z,.EXECUTE
	OR		A
	RET
.EXECUTE:
	CALL	CLOSE_MODALS

	LD		A,(PAGE2)
	CALL	PUT_P2	
	CALL	VIEW_OPEN_DELETE_DLG
	RET
	
FKEY_UPDATE_RENMOV:
	PUSH	AF
	PUSH	DE
	CALL	MENU_ITEM_UPDATE
	CALL	CONTROL_UPDATE
	POP		DE
	POP		AF

	CP		COMMAND_EVENT
	JR		Z,.EXECUTE
	CP		LCLICKPRESS_EVENT
	JR		Z,.EXECUTE
	OR		A
	RET
.EXECUTE:
	CALL	CLOSE_MODALS

	LD		A,(PAGE2)
	CALL	PUT_P2	
	LD		IX,(CUR_VIEW)
	CALL	VIEW_OPEN_RENMOV_DLG
	RET
	
	
FKEY_UPDATE_MKDIR:
	PUSH	AF
	PUSH	DE
	CALL	MENU_ITEM_UPDATE
	CALL	CONTROL_UPDATE
	POP		DE
	POP		AF

	CP		COMMAND_EVENT
	JR		Z,.EXECUTE
	CP		LCLICKPRESS_EVENT
	JR		Z,.EXECUTE
	OR		A
	RET
.EXECUTE:
	CALL	CLOSE_MODALS

	LD		A,(PAGE2)
	CALL	PUT_P2	
	LD		IX,(CUR_VIEW)
	CALL	VIEW_OPEN_MKDIR_DLG
	RET

	
FKEY_UPDATE_COPY:
	PUSH	AF
	PUSH	DE
	CALL	MENU_ITEM_UPDATE
	CALL	CONTROL_UPDATE
	POP		DE
	POP		AF

	CP		COMMAND_EVENT
	JR		Z,.EXECUTE
	CP		LCLICKPRESS_EVENT
	JR		Z,.EXECUTE
	OR		A
	RET
.EXECUTE:
	CALL	CLOSE_MODALS

	LD		A,(PAGE2)
	CALL	PUT_P2	
	CALL	VIEW_OPEN_COPY_DLG
	RET
	
FKEY_UPDATE_PULLDN:
	CP		COMMAND_EVENT
	JR		Z,.EXECUTE
	CP		LCLICKPRESS_EVENT
	JR		Z,.EXECUTE
	RET
.EXECUTE:
	LD		HL,(FOCUS_WINDOW)
	LD		A,H
	OR		L
	JR		Z,.NO_MODAL
	PUSH	HL
	POP		IX
	LD		A,(FOCUS_WINDOW+2)
	CALL	PUT_P2
	LD		A,(IX+OBJ_TYPE)
	CP		DIALOG_TYPE
	RET		Z
	CP		MENU_TYPE
	RET		Z
.NO_MODAL:
	LD		A,(PAGE2)
	CALL	PUT_P2
	
	LD		DE,(FOCUS_WINDOW)
	LD		HL,LEFT_VIEW
	AND		A
	SBC		HL,DE
	JR		Z,.LEFT
	LD		IX,RIGHT_MENU
	CALL	WINDOW_SET_FOCUS
	RET

.LEFT:
	LD		IX,LEFT_MENU
	CALL	WINDOW_SET_FOCUS
	RET

FKEY_UPDATE_EDIT:
	PUSH	AF
	PUSH	DE
	CALL	MENU_ITEM_UPDATE
	CALL	CONTROL_UPDATE
	POP		DE
	POP		AF

	CP		COMMAND_EVENT
	JR		Z,.EXECUTE
	CP		LCLICKPRESS_EVENT
	JR		Z,.EXECUTE
	OR		A
	RET
.EXECUTE:
	CALL	CLOSE_MODALS
	
	LD		A,(PAGE2)
	CALL	PUT_P2	
	CALL	VIEW_EDIT
	RET	


FKEY_UPDATE_EDIT_FROM_VIEW:
	PUSH	AF
	PUSH	DE
	CALL	MENU_ITEM_UPDATE
	CALL	CONTROL_UPDATE
	POP		DE
	POP		AF

	CP		COMMAND_EVENT
	JR		Z,.EXECUTE
	CP		LCLICKPRESS_EVENT
	JR		Z,.EXECUTE
	OR		A
	RET
.EXECUTE:
	CALL	CLOSE_MODALS
	
	LD		A,(PAGE2)
	CALL	PUT_P2	
	CALL	VIEW_EDIT_FROM_VIEW
	RET		
	
FKEY_UPDATE_VIEW:
	PUSH	AF
	PUSH	DE
	CALL	MENU_ITEM_UPDATE
	CALL	CONTROL_UPDATE
	POP		DE
	POP		AF

	CP		COMMAND_EVENT
	JR		Z,.EXECUTE
	CP		LCLICKPRESS_EVENT
	JR		Z,.EXECUTE
	OR		A
	RET
.EXECUTE:
	CALL	CLOSE_MODALS
	
	LD		A,(PAGE2)
	CALL	PUT_P2	
	CALL	VIEW_OPEN_VIEW_DLG
	RET	

FKEY_UPDATE_HELP:
	PUSH	AF
	PUSH	DE
	CALL	MENU_ITEM_UPDATE
	CALL	CONTROL_UPDATE
	POP		DE
	POP		AF

	CP		COMMAND_EVENT
	JR		Z,.EXECUTE
	CP		LCLICKPRESS_EVENT
	JR		Z,.EXECUTE
	OR		A
	RET
.EXECUTE:
	CALL	CLOSE_MODALS

	LD		A,(PAGE2)
	CALL	PUT_P2	
	CALL	VIEW_OPEN_HELP_DLG	

	RET	

FKEY_UPDATE_CONFIG:
	PUSH	AF
	PUSH	DE
	CALL	MENU_ITEM_UPDATE
	CALL	CONTROL_UPDATE
	POP		DE
	POP		AF

	CP		COMMAND_EVENT
	JR		Z,.EXECUTE
	CP		LCLICKPRESS_EVENT
	JR		Z,.EXECUTE
	OR		A
	RET
.EXECUTE:
	CALL	CLOSE_MODALS

	XOR		A
	
	LD		A,(PAGE2)
	CALL	PUT_P2	
	CALL	VIEW_OPEN_CONFIG_DLG	

	RET	
	
	
MENU_SEP_UPDATE:
	SCF
	RET

	
MENU_ATTRIB:
	PUSH	AF
	PUSH	DE
	CALL	MENU_ITEM_UPDATE
	CALL	CONTROL_UPDATE
	POP		DE
	POP		AF

	CP		COMMAND_EVENT
	JR		Z,.EXECUTE
	CP		LCLICKPRESS_EVENT
	JR		Z,.EXECUTE
	OR		A
	RET
.EXECUTE:
	CALL	CLOSE_MODALS

	LD		A,(PAGE2)
	CALL	PUT_P2	
	CALL	VIEW_OPEN_ATTRIB_DLG
	RET

WINDOW_UPDATE_DLG_ATTRIB:
	CALL	WINDOW_UPDATE_DLG
	RET		C
	
	CP		BUTTONPRESS_EVENT
	JR		NZ,.EXIT
	
	LD		A,D
	CP		OK_BUTTON
	JR		Z,.ATTRIB
	CP		CANCEL_BUTTON
	JP		Z,WINDOW_UPDATE_QUIT_DLG.DISMISS
	JP		.EXIT
.ATTRIB:
	CALL	WINDOW_UPDATE_QUIT_DLG.DISMISS
	CALL	VIEW_ATTRIB_FILES
	SCF
	RET
.EXIT:	
	OR		A
	RET
	
MENU_ITEM_UPDATE:
	CP		KEYPRESS_EVENT
	JR		NZ,.EXIT
	LD		A,E
	CP		$0D ; RETURN
	JR		Z,.BUTTONPRESS
	CP		$20 ; SPACE
	JR		Z,.BUTTONPRESS
.EXIT:
	OR		A
	RET
.BUTTONPRESS:
	LD		L,(IX+WIN_PARENT)
	LD		H,(IX+WIN_PARENT+1)
	LD		A,L
	OR		H
	RET		Z
	LD		A,(IX+WIN_PARENT+2)
	CALL	PUT_P2
	LD		A,COMMAND_EVENT
	CALL	WINDOW_UPDATE_FUNCTION
	LD		A,COMMAND_EVENT
	SCF
	RET
	
CONTROL_UPDATE:
	CP		COMMAND_EVENT
	JR		Z,.EXECUTE	
	CP		LCLICKPRESS_EVENT
	JR		Z,.EXECUTE
	OR		A
	RET
.EXECUTE:
	PUSH	AF
	CALL	GET_P2
	PUSH	AF
	LD		A,(IX+OBJ_TYPE)
	CP		MENU_ITEM_TYPE
	JR		Z,.IS_SELECTABLE
	CP		BUTTON_TYPE
	JR		Z,.IS_SELECTABLE
	JP		.NOT_SELECTABLE
.IS_SELECTABLE:
	CALL	GET_P2
	EX		AF,AF'
	LD		HL,(FOCUS_CONTROL)
	LD		A,H
	OR		L
	JR		Z,.FLUSH
	LD		A,(FOCUS_CONTROL+2)
	CALL	PUT_P2
	WALK	HL,0,WIN_FLAGS
	LD		A,(HL)
	RES		FOCUS_BIT,A
	SET		DIRTY_BIT,A
	LD		(HL),A
	EX		AF,AF'
	CALL	PUT_P2
	
.FLUSH:
	LD		A,(IX+WIN_FLAGS)
	SET		FOCUS_BIT,A
	SET		DIRTY_BIT,A
	LD		(IX+WIN_FLAGS),A
	LD		(FOCUS_CONTROL),IX
	LD		(FOCUS_CONTROL+2),A
	PUSH	IX
	LD		A,1
	LD		(SCR_DIRTY),A
	CALL	MC_DRAW
	POP		IX
.NOT_SELECTABLE:
	POP		AF
	CALL	PUT_P2
	POP		AF
	SCF
	RET

WINDOW_UPDATE_DLG_ERROR:

	CALL	WINDOW_UPDATE_DLG
	RET		C
	;JP		C,.ABORT
	
	CP		ENTER_EVENT
	JR		Z,.ENTER
	
	CP		BUTTONPRESS_EVENT
	JR		NZ,.EXIT
	LD		A,D
	CP		OK_BUTTON
	JR		Z,.OK
	CP		ABORT_BUTTON
	JR		Z,.ABORT
	CP		ALL_BUTTON
	JR		Z,.ALL
	CP		CANCEL_BUTTON
	JR		Z,.CANCEL
	JR		.RETRY
.OK:
	LD		A,ERROR_OK
	JR		.DISMISS
.ABORT:
	LD		A,ERROR_ABORT
	JR		.DISMISS
.RETRY:
	LD		A,ERROR_RETRY
	JR		.DISMISS
.CANCEL:
	LD		A,ERROR_CANCEL
	JR		.DISMISS
.ALL:
	LD		A,ERROR_ALL
.DISMISS:
	LD		(DOS_ERROR_USER_REPLY),A
	LD		A,(IX+WIN_FLAGS)
	RES		VISIBLE_BIT,A
	LD		(IX+WIN_FLAGS),A
	CALL	WINDOW_LOSE_FOCUS
	SCF
	RET
.ENTER:
	XOR		A
	LD		(DOS_ERROR_USER_REPLY),A
	SCF
	RET
.EXIT:	
	OR		A
	RET

FKEY_UPDATE_QUIT:
	PUSH	AF
	PUSH	DE
	CALL	MENU_ITEM_UPDATE
	CALL	CONTROL_UPDATE
	POP		DE
	POP		AF

	CP		COMMAND_EVENT
	JR		Z,.EXECUTE
	
	CP		LCLICKPRESS_EVENT
	JR		Z,.EXECUTE
	OR		A
	RET
	
.EXECUTE:
	CALL	CLOSE_MODALS
	
	LD		A,(PAGE2)
	CALL	PUT_P2
	LD		IX,QUIT_DIALOG
	CALL	WINDOW_OPEN
	SCF
	RET

CLOSE_MODALS:
	LD		HL,(FOCUS_WINDOW)
	LD		A,H
	OR		L
	JR		Z,.NO_MODAL
	PUSH	HL
	POP		IX
	LD		A,(FOCUS_WINDOW+2)
	CALL	PUT_P2
	LD		A,(IX+OBJ_TYPE)
	CP		DIALOG_TYPE
	JR		Z,.REQUEST_CLOSE
	CP		MENU_TYPE
	JR		Z,.REQUEST_CLOSE
	JP		.NO_MODAL
.REQUEST_CLOSE:
	CALL	WINDOW_LOSE_FOCUS
.NO_MODAL:
	RET
	
MENU_UPDATE_DRV_LEFT:
	LD		HL,LEFT_VIEW
	LD		(CUR_VIEW),HL
	LD		HL,RIGHT_VIEW
	LD		(OPP_VIEW),HL
	EX		AF,AF'
	LD		A,(PAGE2)
	LD		(CUR_VIEW+2),A
	LD		(OPP_VIEW+2),A
	EX		AF,AF'
	JR		MENU_UPDATE_DRV
MENU_UPDATE_DRV_RIGHT:
	LD		HL,RIGHT_VIEW
	LD		(CUR_VIEW),HL
	LD		HL,LEFT_VIEW
	LD		(OPP_VIEW),HL
	EX		AF,AF'
	LD		A,(PAGE2)
	LD		(CUR_VIEW+2),A	
	LD		(OPP_VIEW+2),A
	EX		AF,AF'
MENU_UPDATE_DRV:
	PUSH	AF
	PUSH	DE
	CALL	MENU_ITEM_UPDATE
	CALL	CONTROL_UPDATE
	POP		DE
	POP		AF
	
	CP		COMMAND_EVENT
	JR		Z,.EXECUTE
	
	CP		LCLICKPRESS_EVENT
	JR		Z,.EXECUTE
	OR		A
	RET
	
.EXECUTE:
	LD		A,(CUR_VIEW+2)
	LD		HL,(CUR_VIEW)
	PUSH	AF
	PUSH	HL
	CALL	CLOSE_MODALS
	POP		HL
	POP		AF
	LD		(CUR_VIEW),HL
	LD		(CUR_VIEW+2),A

	LD		A,(PAGE2)
	CALL	PUT_P2
	LD		IX,DRV_DIALOG
	PUSH	IY
	CALL	WINDOW_OPEN
	POP		IY

	LD		HL,(CUR_VIEW)
	LD		DE,VIEW_CUR_DRIVE
	ADD		HL,DE
	LD		A,(HL)
	ADD		A,'@'
	LD		E,A
	LD		D,0
	LD		A,KEYPRESS_EVENT
	CALL	WINDOW_UPDATE_FUNCTION
	
	SCF
	RET

MENU_RESCAN_LEFT:
	LD		HL,LEFT_VIEW
	LD		(CUR_VIEW),HL
	LD		HL,RIGHT_VIEW
	LD		(OPP_VIEW),HL
	EX		AF,AF'
	LD		A,(PAGE2)
	LD		(CUR_VIEW+2),A
	LD		(OPP_VIEW+2),A
	EX		AF,AF'
	JR		MENU_RESCAN
MENU_RESCAN_RIGHT:
	LD		HL,RIGHT_VIEW
	LD		(CUR_VIEW),HL
	LD		HL,LEFT_VIEW
	LD		(OPP_VIEW),HL
	EX		AF,AF'
	LD		A,(PAGE2)
	LD		(CUR_VIEW+2),A	
	LD		(OPP_VIEW+2),A
	EX		AF,AF'
MENU_RESCAN:
	PUSH	AF
	PUSH	DE
	CALL	MENU_ITEM_UPDATE
	CALL	CONTROL_UPDATE
	POP		DE
	POP		AF
	
	CP		COMMAND_EVENT
	JR		Z,.EXECUTE
	
	CP		LCLICKPRESS_EVENT
	JR		Z,.EXECUTE
	OR		A
	RET	
.EXECUTE:
	LD		A,(CUR_VIEW+2)
	LD		IX,(CUR_VIEW)
	PUSH	AF
	PUSH	IX
	CALL	CLOSE_MODALS
	POP		IX
	POP		AF
	CALL	PUT_P2
	
	LD		A,1
	LD		(IX+VIEW_RESCAN),1
	CALL	WINDOW_SET_FOCUS
	SCF
	RET

MENU_SORT_LEFT:
	LD		HL,LEFT_VIEW
	LD		(CUR_VIEW),HL
	LD		HL,RIGHT_VIEW
	LD		(OPP_VIEW),HL
	EX		AF,AF'
	LD		A,(PAGE2)
	LD		(CUR_VIEW+2),A
	EX		AF,AF'
	JR		MENU_SORT
MENU_SORT_RIGHT:
	LD		HL,RIGHT_VIEW
	LD		(CUR_VIEW),HL
	LD		HL,LEFT_VIEW
	LD		(OPP_VIEW),HL
	EX		AF,AF'
	LD		A,(PAGE2)
	LD		(CUR_VIEW+2),A	
	EX		AF,AF'
MENU_SORT:
	PUSH	AF
	PUSH	DE
	CALL	MENU_ITEM_UPDATE
	CALL	CONTROL_UPDATE
	POP		DE
	POP		AF
	
	CP		COMMAND_EVENT
	JR		Z,.EXECUTE
	
	CP		LCLICKPRESS_EVENT
	JR		Z,.EXECUTE
	OR		A
	RET	
.EXECUTE:
	LD		A,(CUR_VIEW+2)
	LD		IX,(CUR_VIEW)
	PUSH	AF
	PUSH	IX
	CALL	CLOSE_MODALS
	POP		IX
	POP		AF
	CALL	PUT_P2
	
	LD		A,(IX+WIN_FLAGS)
	SET		DIRTY_BIT,A
	LD		(IX+WIN_FLAGS),A
	CALL	VIEW_SORT
	LD		A,(PAGE2)
	CALL	PUT_P2
	LD		IX,(CUR_VIEW)
	CALL	WINDOW_SET_FOCUS
	SCF
	RET
	
	
TEXT_BOX_DRAW:
	LD			H,(IX+AREA_P0+PX)
	LD			L,(IX+AREA_P0+PY)
	LD			D,(IX+AREA_P1+PX)
	LD			E,(IX+AREA_P1+PY)
	CALL		WINDOW_PARENT_ORIGIN
	LD			A,(IX+WIN_ATTR)

	PUSH	AF
	PUSH	HL
	
	LD		A,D
	SUB		H
	LD		B,A				; WIDTH
	INC		B
	
	LD		A,B
	EX		AF,AF'

	PUSH	BC
	LD		HL,TMP_STR
	LD		A,32
.COL_LOOP:
	LD		(HL),A
	INC		HL
	DJNZ	.COL_LOOP
	
	POP		BC
	POP		DE
	POP		AF
	
	LD		HL,TMP_STR
	PUSH	AF
	PUSH	DE
	CALL	VIDEO_PRINT_SIZE
	POP		DE
	POP		AF

	PUSH		IX
	POP			HL
	LD			BC,TEXT_BOX_TEXT
	ADD			HL,BC
	LD			C,(IX+TEXT_BOX_SCROLL)
	LD			B,0
	ADD			HL,BC	
	LD			A,(IX+WIN_ATTR)
	CALL		STRLEN
	EX			AF,AF'
	CP			B
	JP			M,.TOO_BIG
	JR			.OK
.TOO_BIG:
	LD			B,A
.OK:
	EX			AF,AF'
	PUSH		BC
	PUSH		DE
	CALL		VIDEO_PRINT_SIZE
	POP			DE
	POP			BC
	LD			A,(IX+WIN_FLAGS)
	BIT			FOCUS_BIT,A
	JR			Z,.EXIT
	LD			C,(IX+TEXT_BOX_CUR_POS)
	LD			A,D
	ADD			A,C
	LD			D,A
	EX			DE,HL
	LD			A,H
	LD			B,(IX+TEXT_BOX_SCROLL)
	SUB			B
	LD			H,A
	CALL		VIDEO_SET_CURSOR
.EXIT:
	RET
	
	
TEXT_BOX_UPDATE:
	CP		KEYPRESS_EVENT
	JP		Z,.KEYPRESS
	CP		LCLICKPRESS_EVENT
	JP		Z,.LCLICK
.IGNORE:
	OR		A
	RET
.LCLICK:
	LD		A,(IX+TEXT_BOX_SCROLL)
	ADD		A,D
	LD		(IX+TEXT_BOX_CUR_POS),A
	PUSH	IX
	POP		HL
	LD		BC,TEXT_BOX_TEXT
	ADD		HL,BC
	CALL	STRLEN
	CP		B
	JP		M,.FULL
	LD		(IX+TEXT_BOX_CUR_POS),B
	JP		.FULL
.KEYPRESS:
	PUSH	IX
	POP		HL
	LD		BC,TEXT_BOX_TEXT
	ADD		HL,BC
	CALL	STRLEN
	LD		A,(IX+TEXT_BOX_CUR_POS)
	LD		C,A

	LD		A,E
	CP		GKEY_LEFT
	JP		Z,.LEFT
	CP		GKEY_RIGHT
	JP		Z,.RIGHT
	CP		$08
	JP		Z,.BACKSPACE
	CP		$7F
	JP		Z,.DELETE
	
	CP		$09 ; TAB KEY
	JP		Z,.GO_NEXT
	CP		GKEY_UP; UP KEY
	JP		Z,.GO_PREV
	CP		GKEY_DOWN; DOWN KEY
	JP		Z,.GO_NEXT
	CP		$0D
	JP		Z,.ENTER
	CP		$20
	JP		M,.IGNORE
	CP		$80
	JP		M,.TEXT
	JP		.IGNORE
.ENTER:
	LD		L,(IX+WIN_PARENT)
	LD		H,(IX+WIN_PARENT+1)
	LD		A,(IX+WIN_PARENT+2)
	CALL	PUT_P2
	PUSH	HL
	POP		IX
	LD		L,(IX+WIN_UPDATE_F)
	LD		H,(IX+WIN_UPDATE_F+1)
	LD		A,BUTTONPRESS_EVENT
	LD		D,OK_BUTTON
	JP		(HL)
.GO_NEXT:
	LD		L,(IX+WIN_PARENT)
	LD		H,(IX+WIN_PARENT+1)
	LD		A,(IX+WIN_PARENT+2)
	CALL	PUT_P2
	PUSH	HL
	POP		IX
	CALL	WINDOW_GO_NEXT_CONTROL	
	SCF
	RET
.GO_PREV:
	CALL	WINDOW_GO_PREV_CONTROL
	SCF
	RET	
.TEXT:
	LD		A,C
	CP		B
	JR		Z,.CONCAT
.INSERT:
	LD		A,B
	CP		TEXT_BOX_TEXT_SIZE
	JP		Z,.FULL
	
	LD		A,B
	ADD		A,L
	LD		L,A
	LD		A,0
	ADC		A,H
	LD		H,A

	PUSH	DE
	LD		D,H
	LD		E,L
	DEC		HL
	LD		A,B
	SUB		C
	
	INC		C
	LD		(IX+TEXT_BOX_CUR_POS),C	
	
	LD		C,A
	LD		B,0
	LDDR
	EX		DE,HL
	POP		DE
	LD		(HL),E

	JP		.FULL

.CONCAT:
	CP		TEXT_BOX_TEXT_SIZE
	JR		Z,.FULL
	ADD		A,L
	LD		L,A
	LD		A,0
	ADC		A,H
	LD		H,A
	LD		(HL),E
	INC		HL
	LD		(HL),0
	INC		C
	LD		(IX+TEXT_BOX_CUR_POS),C
	JP		.FULL
.LEFT:
	LD		A,C
	OR		A
	JP		Z,.FULL
	DEC		C
	LD		(IX+TEXT_BOX_CUR_POS),C
	JP		.FULL
.RIGHT:
	LD		A,B
	;INC		A
	CP		C
	JP		Z,.FULL
	INC		C
	LD		(IX+TEXT_BOX_CUR_POS),C
	JP		.FULL
.DELETE:
	LD		A,C
	CP		B
	JP		Z,.FULL
	ADD		A,L
	LD		L,A
	LD		A,0
	ADC		A,H
	LD		H,A
	LD		D,H
	LD		E,L
	INC		HL
	LD		A,TEXT_BOX_TEXT_SIZE
	SUB		C
	INC		A
	LD		C,A
	LD		B,0
	LDIR
	JP		.FULL
.BACKSPACE:
	LD		A,C
	OR		A
	JP		Z,.FULL
	CP		B
	JP		Z,.LASTPOS	
.MIDDLE:
	LD		A,C
	ADD		A,L
	LD		L,A
	LD		A,0
	ADC		A,H
	LD		H,A
	LD		D,H
	LD		E,L
	DEC		DE
	LD		A,TEXT_BOX_TEXT_SIZE
	SUB		C
	INC		A
	DEC		C
	LD		(IX+TEXT_BOX_CUR_POS),C

	LD		C,A
	LD		B,0
	LDIR
	JP		.FULL
.LASTPOS:
	DEC		C
	LD		(IX+TEXT_BOX_CUR_POS),C
	LD		A,C
	ADD		A,L
	LD		L,A
	LD		A,0
	ADC		A,H
	LD		H,A
	XOR		A
	LD		(HL),A
.FULL:
	
	LD		A,(IX+AREA_P1+PX)
	LD		B,(IX+AREA_P0+PX)
	SUB		B
	LD		B,A
	
	LD		C,(IX+TEXT_BOX_CUR_POS)
	LD		D,(IX+TEXT_BOX_SCROLL)
	
	LD		A,C
	CP		D
	JP		M,.TO_LEFT
	SUB		D
	CP		B
	JP		M,.OK
	LD		A,C
	SUB		B
	LD		(IX+TEXT_BOX_SCROLL),A
	JR		.OK
.TO_LEFT:
	LD		(IX+TEXT_BOX_SCROLL),C
.OK:

	LD		A,(IX+WIN_FLAGS)
	SET		DIRTY_BIT,A
	LD		(IX+WIN_FLAGS),A
	SCF
	RET
	
CONSOLE_UPDATE:
	CP		UPDATE_EVENT
	JP		Z,.UPDATE
	CP		KEYPRESS_EVENT
	JP		Z,.KEYPRESS
.IGNORE:
	OR		A
	RET		NZ
.KEYPRESS:
	LD		A,E
	CP		'+'
	JP		Z,.CHECK_CMD
	CP		'-'
	JP		Z,.CHECK_CMD
	CP		'*'
	JP		Z,.CHECK_CMD
	CP		$0D ; RETURN
	JP		Z,.EXECUTE
	CP		GKEY_LEFT
	JP		Z,.ACCEPT
	CP		GKEY_RIGHT
	JP		Z,.ACCEPT
	CP		$08
	JP		Z,.ACCEPT
	CP		$7F
	JP		Z,.ACCEPT
	CP		$20
	JP		M,.IGNORE
	CP		$80
	JP		M,.ACCEPT
	JP		.IGNORE
.CHECK_CMD:
	LD		HL,CONSOLE_INPUT+TEXT_BOX_TEXT
	CALL	STRLEN
	LD		A,B
	OR		A
	RET		Z
	JP		.ACCEPT
.EXECUTE:
	LD		HL,CONSOLE_INPUT+TEXT_BOX_TEXT
	CALL	STRLEN
	LD		A,B
	OR		A
	RET		Z
	LD		HL,CONSOLE_INPUT+TEXT_BOX_TEXT
	LD		DE,SHELL_PARAMS
	LD		BC,TEXT_BOX_TEXT_SIZE+1
	LDIR
	LD		IX,CONSOLE_INPUT
	XOR		A
	LD		(IX+TEXT_BOX_TEXT),A
	LD		(IX+TEXT_BOX_CUR_POS),A
	CALL	MC_EXEC
	SCF
	RET
.ACCEPT:
	LD		A,KEY_CTRL
	CALL	KEY_IS_PRESSED
	JR		NC,.BACKSPACE
	OR		A
	RET
.BACKSPACE:
	LD		IX,CONSOLE_INPUT
	LD		A,KEYPRESS_EVENT
	LD		D,0
	JP		TEXT_BOX_UPDATE
.UPDATE:
	LD		A,(FOCUS_WINDOW+2)
	LD		B,A
	LD		A,(PAGE2)
	CP		B
	JR		NZ,.UNFOCUS
	
	LD		DE,(FOCUS_WINDOW)
	LD		HL,LEFT_VIEW
	AND		A
	SBC		HL,DE
	JR		Z,.FOCUS
	LD		HL,RIGHT_VIEW
	AND		A
	SBC		HL,DE
	JR		Z,.FOCUS
	
.UNFOCUS:
	LD		IY,CONSOLE_INPUT
	LD		A,(IY+WIN_FLAGS)
	BIT		FOCUS_BIT,A
	JR		Z,.EARLY_EXIT
	RES		FOCUS_BIT,A
	SET		DIRTY_BIT,A
	LD		(IY+WIN_FLAGS),A
	LD		A,1
	LD		(SCR_DIRTY),A
.EARLY_EXIT:
	SCF
	RET
	
.FOCUS:
	LD		IY,CONSOLE_INPUT
	LD		A,(IY+WIN_FLAGS)
	BIT		FOCUS_BIT,A
	JR		NZ,.EXIT
	SET		FOCUS_BIT,A
	SET		DIRTY_BIT,A
	LD		(IY+WIN_FLAGS),A
	LD		A,1
	LD		(SCR_DIRTY),A
.EXIT:
	SCF
	RET
	
CONSOLE_DRAW:	
	
	LD		H,(IX+AREA_P0+PX)
	LD		L,(IX+AREA_P0+PY)
	LD		D,(IX+AREA_P1+PX)
	LD		E,(IX+AREA_P1+PY)
	CALL	WINDOW_PARENT_ORIGIN
	LD		A,(IX+WIN_ATTR)

	PUSH	AF
	PUSH	HL
	
	LD		A,D
	SUB		H
	LD		C,A				; WIDTH
	INC		C
	LD		A,E
	SUB		L
	LD		B,A
	INC		B				; HEIGHT

	PUSH	BC
	LD		B,C
	
	LD		HL,TMP_STR
	LD		A,32
.COL_LOOP:
	LD		(HL),A
	INC		HL
	DJNZ	.COL_LOOP
	
	POP		BC
	POP		DE
	POP		AF
	
	PUSH	DE
	LD		HL,TMP_STR
.ROW_LOOP:
	PUSH	AF
	PUSH	BC
	PUSH	DE
	PUSH	HL
	LD		B,C
	CALL	VIDEO_PRINT_SIZE
	POP		HL
	POP		DE
	POP		BC
	POP		AF
	INC		E
	DJNZ	.ROW_LOOP

	POP		DE
	PUSH	AF
	PUSH	DE
	LD		HL,STR_COMMAND_MSG
	CALL	STRLEN
	CALL	VIDEO_PRINT_SIZE
	POP		DE
	POP		AF
	INC		E
	PUSH	IX
	POP		HL
	PUSH	DE
	LD		DE,CONSOLE_PATH
	ADD		HL,DE
	POP		DE
	CALL	STRLEN
	CALL	VIDEO_PRINT_SIZE
	
	RET

FILE_MENU_SELECT_ALL:
	PUSH	AF
	PUSH	DE
	CALL	MENU_ITEM_UPDATE
	CALL	CONTROL_UPDATE
	POP		DE
	POP		AF
	
	CP		COMMAND_EVENT
	JR		Z,.EXECUTE
	CP		LCLICKPRESS_EVENT
	JR		Z,.EXECUTE
	OR		A
	RET
.EXECUTE:
	CALL	CLOSE_MODALS
	
	LD		A,(CUR_VIEW+2)
	CALL	PUT_P2
	LD		IX,(CUR_VIEW)
	LD		A,KEYPRESS_EVENT
	LD		E,'+'
	LD		D,0
	CALL	VIEW_UPDATE
	OR		A
	RET

FILE_MENU_UNSELECT_ALL:
	PUSH	AF
	PUSH	DE
	CALL	MENU_ITEM_UPDATE
	CALL	CONTROL_UPDATE
	POP		DE
	POP		AF
	
	CP		COMMAND_EVENT
	JR		Z,.EXECUTE
	CP		LCLICKPRESS_EVENT
	JR		Z,.EXECUTE
	OR		A
	RET
.EXECUTE:
	CALL	CLOSE_MODALS

	LD		A,(CUR_VIEW+2)
	CALL	PUT_P2
	LD		IX,(CUR_VIEW)
	LD		A,KEYPRESS_EVENT
	LD		E,'-'
	LD		D,0
	CALL	VIEW_UPDATE
	RET

FILE_MENU_INVERT_ALL:
	PUSH	AF
	PUSH	DE
	CALL	MENU_ITEM_UPDATE
	CALL	CONTROL_UPDATE
	POP		DE
	POP		AF
	
	CP		COMMAND_EVENT
	JR		Z,.EXECUTE
	CP		LCLICKPRESS_EVENT
	JR		Z,.EXECUTE
	OR		A
	RET
	
.EXECUTE:
	CALL	CLOSE_MODALS
	
	LD		A,(CUR_VIEW+2)
	CALL	PUT_P2
	LD		IX,(CUR_VIEW)
	LD		A,KEYPRESS_EVENT
	LD		E,'*'
	LD		D,0
	CALL	VIEW_UPDATE
	RET
	
WINDOW_UPDATE_MKDIR_DLG;
	CALL	WINDOW_UPDATE_DLG
	RET		C
	
	CP		BUTTONPRESS_EVENT
	JR		NZ,.EXIT
	
	LD		A,D
	CP		OK_BUTTON
	JR		Z,.DELETE
	CP		CANCEL_BUTTON
	JP		Z,WINDOW_UPDATE_QUIT_DLG.DISMISS
	JP		.EXIT
.DELETE:
	CALL	WINDOW_UPDATE_QUIT_DLG.DISMISS
	CALL	VIEW_MKDIR
	SCF
	RET
.EXIT:	
	OR		A
	RET

	
	
MENU_UPDATE_FILTER_LEFT:
	LD		HL,LEFT_VIEW
	LD		(CUR_VIEW),HL
	LD		HL,RIGHT_VIEW
	LD		(OPP_VIEW),HL
	EX		AF,AF'
	LD		A,(PAGE2)
	LD		(CUR_VIEW+2),A
	LD		(OPP_VIEW+2),A
	EX		AF,AF'
	JR		MENU_UPDATE_FILTER
MENU_UPDATE_FILTER_RIGHT:
	LD		HL,RIGHT_VIEW
	LD		(CUR_VIEW),HL
	LD		HL,LEFT_VIEW
	LD		(OPP_VIEW),HL
	EX		AF,AF'
	LD		A,(PAGE2)
	LD		(CUR_VIEW+2),A	
	LD		(OPP_VIEW+2),A
	EX		AF,AF'
MENU_UPDATE_FILTER:
	PUSH	AF
	PUSH	DE
	CALL	MENU_ITEM_UPDATE
	CALL	CONTROL_UPDATE
	POP		DE
	POP		AF
	
	CP		COMMAND_EVENT
	JR		Z,.EXECUTE
	
	CP		LCLICKPRESS_EVENT
	JR		Z,.EXECUTE
	OR		A
	RET
	
.EXECUTE:
	CALL	CLOSE_MODALS
	
	LD		A,(PAGE2)
	CALL	PUT_P2
	
	LD		HL,(CUR_VIEW)
	LD		DE,VIEW_FILTER
	ADD		HL,DE
	EX		DE,HL

	LD		HL,INPUT_DLG_INPUT
	LD		BC,TEXT_BOX_TEXT
	ADD		HL,BC
	EX		DE,HL	
	CALL	STRCPY	
	
	LD		IX,INPUT_DLG_INPUT
	CALL	STRLEN
	LD		(IX+TEXT_BOX_CUR_POS),B
	LD		(IX+TEXT_BOX_SCROLL),0
	
	LD		IX,INPUT_DIALOG
	WIN_SETUPDATE_F	WINDOW_UPDATE_FILTER_DLG
	WIN_SETLABEL	STR_FILTER_MSG
	
	CALL	WINDOW_OPEN

	SCF
	RET
	
WINDOW_UPDATE_FILTER_DLG:
	CALL	WINDOW_UPDATE_DLG
	RET		C
	
	CP		BUTTONPRESS_EVENT
	JR		NZ,.EXIT
	
	LD		A,D
	CP		OK_BUTTON
	JR		Z,.DELETE
	CP		CANCEL_BUTTON
	JP		Z,WINDOW_UPDATE_QUIT_DLG.DISMISS
	JP		.EXIT
.DELETE:
	CALL	WINDOW_UPDATE_QUIT_DLG.DISMISS

	LD		A,(PAGE2)
	CALL	PUT_P2
	LD		HL,(CUR_VIEW)
	LD		DE,VIEW_FILTER
	ADD		HL,DE
	EX		DE,HL

	LD		HL,INPUT_DLG_INPUT
	LD		BC,TEXT_BOX_TEXT
	ADD		HL,BC
	LD		BC,12
	LDIR
	XOR		A
	LD		(DE),A

	LD		A,1
	LD		IX,(CUR_VIEW)
	LD		(IX+VIEW_RESCAN),A
	CALL	WINDOW_SET_FOCUS

	SCF
	RET
.EXIT:	
	OR		A
	RET

WINDOW_DRAW_VIEW:
	LD		HL,$0000
	LD		DE,$4F00
	LD		A,CYAN_COLOR
	CALL	DRAW_AREA

	LD		HL,$0001
	LD		DE,$4F18
	LD		A,BLUE_COLOR
	CALL	DRAW_AREA

	LD		DE,TMP_STR
	LD		HL,STR_FILE
	CALL	STRCPY
	
	LD		HL,DOS_CUR_PATH
	CALL	STRCAT
	
	LD		A,CYAN_COLOR
	LD		HL,TMP_STR
	LD		DE,$0000
	CALL	STRLEN
	
	CALL	VIDEO_PRINT_SIZE

	CALL	GET_P2
	PUSH	AF
	
	LD		HL,(FIRST_COPY_CHUNK)
	LD		A,(FIRST_COPY_CHUNK+2)
	CALL	PUT_P2
	LD		B,24
	LD		DE,$0001
.LOOP:
	PUSH	BC
	PUSH	DE
	PUSH	HL

	EXX	
	POP		HL
	PUSH	HL
	LD		DE,TMP_STR2
	LD		BC,80
	LDIR
	EXX
	
	LD		HL,TMP_STR2
	LD		A,BLUE_COLOR
	LD		B,80
	CALL	VIDEO_PRINT_SIZE
	POP		HL
	LD		DE,80
	ADD		HL,DE
	POP		DE
	INC		E
	POP		BC
	DJNZ	.LOOP
	
	POP		AF
	CALL	PUT_P2
	
	RET

	
	

MENU_INFO_LEFT:
	LD		HL,LEFT_VIEW
	LD		(CUR_VIEW),HL
	LD		HL,RIGHT_VIEW
	LD		(OPP_VIEW),HL
	EX		AF,AF'
	LD		A,(PAGE2)
	LD		(CUR_VIEW+2),A
	LD		(OPP_VIEW+2),A
	EX		AF,AF'
	JR		MENU_INFO
MENU_INFO_RIGHT:
	LD		HL,RIGHT_VIEW
	LD		(CUR_VIEW),HL
	LD		HL,LEFT_VIEW
	LD		(OPP_VIEW),HL
	EX		AF,AF'
	LD		A,(PAGE2)
	LD		(CUR_VIEW+2),A	
	LD		(OPP_VIEW+2),A
	EX		AF,AF'
MENU_INFO:
	PUSH	AF
	PUSH	DE
	CALL	MENU_ITEM_UPDATE
	CALL	CONTROL_UPDATE
	POP		DE
	POP		AF
	
	CP		COMMAND_EVENT
	JR		Z,.EXECUTE
	
	CP		LCLICKPRESS_EVENT
	JR		Z,.EXECUTE
	OR		A                                                                                       
	RET	
.EXECUTE:
	CALL	SET_INFO_FKEYS
	CALL	CLOSE_MODALS
	
INFO_STR_OFF EQU 25
	
	LD		IX,(CUR_VIEW)
	LD		A,(IX+VIEW_CUR_DRIVE)
	ADD		A,'@'
	LD		HL,STR_INFO_DRIVE+INFO_STR_OFF
	LD		(HL),A
	INC		HL
	XOR		A
	LD		(HL),A
	
	LD		DE,STR_INFO_VOLUME+INFO_STR_OFF
	LD		HL,(CUR_VIEW)
	LD		BC,VIEW_VOLUME
	ADD		HL,BC
	CALL	STRCPY
;
	LD		L,(IX+VIEW_CUR_DRIVE)
	LD		DE,DOS_FIB
	LD		C,_DPARM
	CALL	DOS
	OR		A
	JP		NZ,.ERROR
	
	LD		DE,TMP_STR
	LD		HL,STR_NUMBER_U16
	CALL	STRCPY
	LD		HL,(DOS_FIB+1)
	LD		DE,TMP_STR
	CALL	U16_TO_ASCII
	LD		DE,STR_INFO_BYTES_SEC+INFO_STR_OFF
	XOR		A
	LD		(DE),A
	LD		HL,TMP_STR
	CALL	STRCAT_NOLEADSPACE
	
	LD		DE,TMP_STR
	LD		HL,STR_NUMBER_U8
	CALL	STRCPY
	LD		HL,(DOS_FIB+3)
	LD		DE,TMP_STR
	CALL	U8_TO_ASCII
	LD		DE,STR_INFO_SECS_CLUSTER+INFO_STR_OFF
	XOR		A
	LD		(DE),A
	LD		HL,TMP_STR
	CALL	STRCAT_NOLEADSPACE
		
	LD		DE,TMP_STR
	LD		HL,STR_NUMBER_U16
	CALL	STRCPY

	LD		DE,(DOS_FIB+1)
	LD		BC,(DOS_FIB+3)
	LD		B,0
	CALL	MULT16
	LD		(CLUSTER_SIZE),HL
	LD		DE,TMP_STR
	CALL	U16_TO_ASCII
	LD		DE,STR_INFO_CLUSTER_SIZE+INFO_STR_OFF
	XOR		A
	LD		(DE),A
	LD		HL,TMP_STR
	CALL	STRCAT_NOLEADSPACE

	PUSH	IX
	LD		E,(IX+VIEW_CUR_DRIVE)
	LD		C,_ALLOC
	CALL	DOS
	POP		IX
	
	LD		(TOTAL_CLUSTERS),DE
	LD		(FREE_CLUSTERS),HL	
	
	LD		DE,TMP_STR
	LD		HL,STR_NUMBER_U32
	CALL	STRCPY		
	LD		BC,(CLUSTER_SIZE)
	LD		DE,(TOTAL_CLUSTERS)
	CALL	MULT32	
	PUSH	BC
	POP		DE
	EXX
	LD		DE,TMP_STR
	EXX
	CALL	U32_TO_ASCII
	LD		DE,STR_INFO_SIZE+INFO_STR_OFF
	XOR		A
	LD		(DE),A
	LD		HL,TMP_STR
	CALL	STRCAT_NOLEADSPACE

	LD		DE,TMP_STR
	LD		HL,STR_NUMBER_U32
	CALL	STRCPY	
	LD		BC,(CLUSTER_SIZE)
	LD		DE,(FREE_CLUSTERS)
	CALL	MULT32	
	PUSH	BC
	POP		DE
	EXX
	LD		DE,TMP_STR
	EXX
	CALL	U32_TO_ASCII
	LD		DE,STR_INFO_FREE+INFO_STR_OFF
	XOR		A
	LD		(DE),A
	LD		HL,TMP_STR
	CALL	STRCAT_NOLEADSPACE

	LD		DE,TMP_STR
	LD		HL,STR_NUMBER_U32
	CALL	STRCPY	
	LD		HL,(TOTAL_CLUSTERS)
	LD		DE,(FREE_CLUSTERS)
	AND		A
	SBC		HL,DE
	EX		DE,HL
	LD		BC,(CLUSTER_SIZE)
	CALL	MULT32	
	PUSH	BC
	POP		DE
	EXX
	LD		DE,TMP_STR
	EXX
	CALL	U32_TO_ASCII
	LD		DE,STR_INFO_USED+INFO_STR_OFF
	XOR		A
	LD		(DE),A
	LD		HL,TMP_STR
	CALL	STRCAT_NOLEADSPACE
	
	LD		HL,(TOTAL_CLUSTERS)
	LD		DE,4088
	AND		A
	SBC		HL,DE
	JR		C,.FAT12
	LD		HL,STR_INFO_FILESYSTEM+29
	LD		A,'6'
	LD		(HL),A	
	JR		.CONT
.FAT12:
	LD		HL,STR_INFO_FILESYSTEM+29
	LD		A,'2'
	LD		(HL),A
.CONT:	
;
	LD		IX,INFO_DIALOG
	CALL	WINDOW_OPEN
	SCF
	RET
.ERROR:
	PUSH	AF
	LD		A,(PAGE2)
	CALL	PUT_P2

	LD		DE,DOS_ERROR_MSG
	LD		HL,STR_ERROR_INFO
	CALL	STRCPY
	LD		A,(IX+VIEW_CUR_DRIVE)
	ADD		A,'@'
	LD		HL,DOS_ERROR_MSG
	CALL	STRLEN
	LD		C,B
	LD		B,0
	ADD		HL,BC
	LD		(HL),A
	INC		HL
	XOR		A
	LD		(HL),A
	
	POP		AF
	LD		C,_EXPLAIN
	LD		B,A
	LD		DE,DOS_ERROR_MSG2
	CALL	BDOS

	LD		HL,DOS_ERROR_MSG
	LD		DE,DOS_ERROR_MSG2
	CALL	OPEN_MESSAGE_DLG

	RET
	
	
WINDOW_UPDATE_DLG_INFO:

	CALL	WINDOW_UPDATE_DLG
	PUSH	AF
	CP		EXIT_EVENT
	JP		Z,.CLOSE
	POP		AF
	RET		C
	
	CP		BUTTONPRESS_EVENT
	JP		NZ,.EXIT
	LD		A,D
	CP		OK_BUTTON
	JP		Z,.DISMISS
.EXIT:	
	OR		A
	RET
.CLOSE:
	POP		AF
	PUSH	IX
	CALL	SET_NAVIGATION_FKEYS
	POP		IX
	OR		A
	RET
.DISMISS:
	LD		A,(IX+WIN_FLAGS)
	RES		VISIBLE_BIT,A
	LD		(IX+WIN_FLAGS),A
	CALL	WINDOW_LOSE_FOCUS
	SCF
	RET
